#################################################
#                                               #
#                     ICONS                     #
#                                               #
#################################################

icon_plex:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M7.7.3h34.6c4.1 0 7.4 3.3 7.4 7.4v34.6c0 4.1-3.3 7.4-7.4 7.4H7.7c-4.1 0-7.4-3.3-7.4-7.4V7.7C.3 3.6 3.6.3 7.7.3z" fill="#282a2d"/>
        <path d="M25,7.1H14.6L25,25L14.6,42.9H25L35.4,25L25,7.1z" fill="#e5a00d"/>
      </svg>

icon_apple_tv:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25.2 49.7l-13.7-.1c-2.4 0-4.6-.8-6.5-2.2-2-1.6-3.6-3.6-4.3-6.2-.2-1-.2-1.9-.3-3V11.5C.5 7.9 1.9 5 4.8 2.7 6.2 1.6 7.8.8 9.6.5c.5-.1.9-.1 1.4-.1L27.5.3l10.9.1c2.6 0 4.8.8 6.7 2.4 2.1 1.7 3.7 3.9 4.2 6.6l.2 2.4.1 20.5-.1 6.7c-.1 2.2-.9 4.2-2.2 5.9-1.7 2.2-4 3.8-6.8 4.4-.6.1-1.2.2-1.9.2-.1.1-13.4.2-13.4.2zm-4-27.8c-.9-1.2-2.2-1.6-3.7-1.2-.4.1-.8.2-1.2.4-.3.1-.6.1-.8 0-.4-.1-.8-.3-1.2-.4-.3-.1-.7-.1-1-.1-1.5.2-2.4 1.1-3 2.6-.4 1.1-.3 2.2 0 3.5.4 1.5 1 2.9 2.1 4 .5.6 1.2.9 2 .6 1.1-.5 2.2-.5 3.4 0 .8.3 1.5 0 2.1-.6.7-.8 1.1-1.8 1.6-2.8v-.2c-1-.6-1.7-1.4-1.8-2.7-.2-1.4.5-2.4 1.5-3.1zm9.9-1.4c.1.2.1.3.1.4l3.6 9.5c.1.3.3.4.6.4h.7c.6 0 .6 0 .9-.6l3.7-9.4c.1-.1.1-.3.2-.5H39l-2.9 8.3-3.1-8.3-1.9.2zM27.3 18l-1.3.4c-.5.2-.5.2-.6.7v1.4h-1.6l.1 1.4h1.5v5c0 .7.1 1.4.2 2.1.1.5.3 1 .8 1.4.8.6 2.6.7 3.5.2l-.1-1.2h-1.3c-.5 0-.9-.3-1-.8-.1-.3-.2-.6-.2-1v-5.8H30c0-.5.1-1 0-1.4h-2.7V18zm-8.8-.9c-1.9.3-3 2-2.7 3.2 1.4.2 2.9-1.7 2.7-3.2z"/>
      </svg>

icon_spotify:
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M25 .3C11.4.3.3 11.4.3 25S11.4 49.7 25 49.7 49.7 38.6 49.7 25 38.6.3 25 .3zm11.3 35.6c-.4.7-1.4 1-2.1.5-5.8-3.5-13.1-4.3-21.7-2.4-.8.2-1.7-.3-1.8-1.2-.2-.8.3-1.7 1.2-1.8 9.4-2.2 17.5-1.2 24 2.8.6.5.9 1.4.4 2.1zm3.1-6.7c-.6.9-1.7 1.2-2.6.6-6.6-4.1-16.8-5.3-24.6-2.9a1.96 1.96 0 0 1-2.4-1.3 1.96 1.96 0 0 1 1.3-2.4c9-2.7 20.1-1.4 27.7 3.3.8.6 1.1 1.8.6 2.7h0zm.2-7c-8-4.7-21.1-5.2-28.7-2.9-1.2.4-2.5-.3-2.9-1.5s.3-2.5 1.5-2.9c8.7-2.6 23.2-2.1 32.4 3.3 1.1.7 1.5 2.1.8 3.2-.6 1.1-2 1.4-3.1.8h0z"/>
      </svg>

icon_alexa:
  custom_fields:
    icon: >
      <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 511.998 511.998" xml:space="preserve" width="100%" height="100%" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path style="fill:#9DA6BA;" d="M500.989,183.064v185.179c0,12.772-10.35,23.123-23.112,23.123h-95.199 c-12.772,0-23.123-10.35-23.123-23.123V183.064c0-12.772,10.35-23.123,23.123-23.123h95.199 C490.639,159.942,500.989,170.292,500.989,183.064z M465.931,316.922c0-19.698-15.966-35.664-35.653-35.664 c-19.698,0-35.664,15.966-35.664,35.664c0,19.687,15.966,35.653,35.664,35.653C449.965,352.575,465.931,336.609,465.931,316.922z M450.736,221.15c0-11.308-9.161-20.469-20.458-20.469c-11.308,0-20.469,9.161-20.469,20.469c0,11.308,9.161,20.469,20.469,20.469 C441.575,241.619,450.736,232.458,450.736,221.15z"></path> <g> <path style="fill:#5A5D6F;" d="M430.278,281.258c19.687,0,35.653,15.966,35.653,35.664c0,19.687-15.966,35.653-35.653,35.653 c-19.698,0-35.664-15.966-35.664-35.653C394.614,297.224,410.58,281.258,430.278,281.258z M441.289,317.362 c0-6.078-4.933-11.011-11.011-11.011c-6.089,0-11.011,4.933-11.011,11.011c0,6.078,4.922,11.011,11.011,11.011 C436.356,328.373,441.289,323.44,441.289,317.362z"></path> <path style="fill:#5A5D6F;" d="M430.278,200.681c11.297,0,20.458,9.161,20.458,20.469s-9.161,20.469-20.458,20.469 c-11.308,0-20.469-9.161-20.469-20.469C409.809,209.842,418.97,200.681,430.278,200.681z"></path> </g> <path style="fill:#E1EAF6;" d="M359.556,183.064v185.179c0,12.772-10.35,23.123-23.112,23.123H175.555 c-12.761,0-23.112-10.35-23.112-23.123V183.064v-39.308c0-12.772,10.35-23.123,23.112-23.123h160.889 c12.761,0,23.112,10.35,23.112,23.123V183.064z M314.071,216.636v-51.475H197.929v51.475H314.071z M281.446,281.28 c0-12.398-10.053-22.451-22.451-22.451s-22.44,10.053-22.44,22.451s10.042,22.44,22.44,22.44 C271.393,303.72,281.446,293.678,281.446,281.28z"></path> <rect x="197.929" y="165.161" style="fill:#94D8F2;" width="116.141" height="51.475"></rect> <g> <path style="fill:#9DA6BA;" d="M258.995,258.829c12.398,0,22.451,10.053,22.451,22.451s-10.053,22.44-22.451,22.44 s-22.44-10.042-22.44-22.44S246.597,258.829,258.995,258.829z"></path> <path style="fill:#9DA6BA;" d="M152.444,183.064v185.179c0,12.772-10.35,23.123-23.123,23.123H34.122 c-12.761,0-23.112-10.35-23.112-23.123V183.064c0-12.772,10.35-23.123,23.112-23.123h95.199 C142.094,159.942,152.444,170.292,152.444,183.064z M117.386,316.922c0-19.698-15.966-35.664-35.664-35.664 c-19.687,0-35.653,15.966-35.653,35.664c0,19.687,15.966,35.653,35.653,35.653C101.42,352.575,117.386,336.609,117.386,316.922z M102.191,221.15c0-11.308-9.161-20.469-20.469-20.469c-11.297,0-20.458,9.161-20.458,20.469c0,11.308,9.161,20.469,20.458,20.469 C93.03,241.619,102.191,232.458,102.191,221.15z"></path> </g> <g> <path style="fill:#5A5D6F;" d="M81.722,281.258c19.698,0,35.664,15.966,35.664,35.664c0,19.687-15.966,35.653-35.664,35.653 c-19.687,0-35.653-15.966-35.653-35.653C46.069,297.224,62.035,281.258,81.722,281.258z M92.733,317.362 c0-6.078-4.922-11.011-11.011-11.011c-6.078,0-11.011,4.933-11.011,11.011c0,6.078,4.933,11.011,11.011,11.011 C87.811,328.373,92.733,323.44,92.733,317.362z"></path> <path style="fill:#5A5D6F;" d="M81.722,200.681c11.308,0,20.469,9.161,20.469,20.469s-9.161,20.469-20.469,20.469 c-11.297,0-20.458-9.161-20.458-20.469C61.264,209.842,70.425,200.681,81.722,200.681z"></path> </g> <path d="M430.278,306.352c-6.089,0-11.011,4.933-11.011,11.011c0,6.078,4.922,11.011,11.011,11.011 c6.078,0,11.011-4.933,11.011-11.011C441.289,311.284,436.356,306.352,430.278,306.352z"></path> <path d="M81.722,306.352c-6.078,0-11.011,4.933-11.011,11.011c0,6.078,4.933,11.011,11.011,11.011 c6.089,0,11.011-4.933,11.011-11.011C92.733,311.284,87.811,306.352,81.722,306.352z"></path> <path d="M477.878,148.931h-95.199c-4.264,0-8.345,0.793-12.112,2.227v-7.404c0-18.822-15.307-34.133-34.122-34.133H175.555 c-18.815,0-34.122,15.312-34.122,34.133v7.404c-3.767-1.435-7.847-2.227-12.112-2.227H34.122C15.307,148.931,0,164.242,0,183.064 v185.179c0,18.822,15.307,34.133,34.122,34.133h95.199c8.913,0,17.035-3.438,23.12-9.052c6.083,5.614,14.203,9.052,23.113,9.052 h160.889c8.91,0,17.029-3.438,23.113-9.052c6.086,5.614,14.208,9.052,23.12,9.052h95.199c18.815,0,34.122-15.312,34.122-34.133 V183.064C512,164.242,496.693,148.931,477.878,148.931z M129.321,380.355H34.122c-6.673,0-12.101-5.434-12.101-12.112V183.064 c0-6.678,5.428-12.112,12.101-12.112h95.199c6.678,0,12.112,5.434,12.112,12.112v185.179 C141.433,374.922,136,380.355,129.321,380.355z M336.445,380.355H175.555c-6.673,0-12.101-5.434-12.101-12.112V143.756 c0-6.678,5.428-12.112,12.101-12.112h160.889c6.673,0,12.101,5.434,12.101,12.112v39.308v185.179 C348.545,374.922,343.117,380.355,336.445,380.355z M489.979,368.243c0,6.678-5.428,12.112-12.101,12.112h-95.199 c-6.678,0-12.112-5.434-12.112-12.112V183.064c0-6.678,5.434-12.112,12.112-12.112h95.199c6.673,0,12.101,5.434,12.101,12.112 V368.243z"></path> <path d="M81.722,270.247c-25.731,0-46.664,20.938-46.664,46.675c0,25.73,20.934,46.664,46.664,46.664 c25.737,0,46.675-20.934,46.675-46.664C128.396,291.185,107.458,270.247,81.722,270.247z M81.722,341.564 c-13.587,0-24.642-11.055-24.642-24.642c0-13.594,11.055-24.653,24.642-24.653c13.594,0,24.653,11.059,24.653,24.653 C106.375,330.509,95.316,341.564,81.722,341.564z"></path> <path d="M81.722,252.63c17.358,0,31.48-14.122,31.48-31.481s-14.121-31.48-31.48-31.48c-17.352,0-31.469,14.121-31.469,31.48 S64.37,252.63,81.722,252.63z M81.722,211.692c5.215,0,9.458,4.244,9.458,9.458c0,5.216-4.244,9.459-9.458,9.459 c-5.209,0-9.447-4.244-9.447-9.459C72.275,215.935,76.513,211.692,81.722,211.692z"></path> <path d="M430.278,270.247c-25.737,0-46.675,20.938-46.675,46.675c0,25.73,20.938,46.664,46.675,46.664 c25.731,0,46.664-20.934,46.664-46.664C476.942,291.185,456.008,270.247,430.278,270.247z M430.278,341.564 c-13.594,0-24.653-11.055-24.653-24.642c0-13.594,11.059-24.653,24.653-24.653c13.587,0,24.642,11.059,24.642,24.653 C454.92,330.509,443.865,341.564,430.278,341.564z"></path> <path d="M430.278,252.63c17.352,0,31.469-14.122,31.469-31.481s-14.117-31.48-31.469-31.48c-17.358,0-31.48,14.121-31.48,31.48 S412.92,252.63,430.278,252.63z M430.278,211.692c5.209,0,9.447,4.244,9.447,9.458c0,5.216-4.238,9.459-9.447,9.459 c-5.215,0-9.458-4.244-9.458-9.459C420.82,215.935,425.062,211.692,430.278,211.692z"></path> <path d="M314.071,154.15H197.929c-6.081,0-11.011,4.931-11.011,11.011v51.475c0,6.08,4.93,11.011,11.011,11.011h116.141 c6.081,0,11.011-4.931,11.011-11.011v-51.475C325.081,159.081,320.152,154.15,314.071,154.15z M303.06,205.625h-94.12v-29.454h94.12 V205.625z"></path> <path d="M258.995,247.818c-18.445,0-33.451,15.011-33.451,33.462c0,18.445,15.005,33.451,33.451,33.451 c18.451,0,33.462-15.005,33.462-33.451C292.457,262.829,277.446,247.818,258.995,247.818z M258.995,292.709 c-6.303,0-11.429-5.127-11.429-11.429c0-6.308,5.128-11.44,11.429-11.44c6.308,0,11.44,5.132,11.44,11.44 C270.435,287.583,265.303,292.709,258.995,292.709z"></path> <path d="M314.071,335.827h-1.916c-6.081,0-11.011,4.931-11.011,11.011s4.93,11.011,11.011,11.011h1.916 c6.081,0,11.011-4.931,11.011-11.011S320.152,335.827,314.071,335.827z"></path> <path d="M279.123,335.827H203.93c-6.081,0-11.011,4.931-11.011,11.011s4.93,11.011,11.011,11.011h75.192 c6.081,0,11.011-4.931,11.011-11.011S285.204,335.827,279.123,335.827z"></path> </g></svg>

icon_aquarium:
  custom_fields:
    icon: >
      <svg height="100%" width="100%" version="1.1" id="Capa_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 440 440" xml:space="preserve" fill="#000000"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <g> <path style="fill:#E2E4E6;" d="M308,32L308,32l7.145,0c7.97,0,15.357-5.447,16.637-13.314C333.411,8.662,325.717,0,316,0L124.856,0 c-7.97,0-15.358,5.446-16.637,13.313C106.588,23.337,114.283,32,124,32h8v0c0,16.75-8.675,32.11-22.621,41.387 C55.51,109.216,20,170.453,20,240c0,72.363,38.435,135.744,96,170.858V424c0,8.837,7.163,16,16,16h176c8.837,0,16-7.163,16-16 v-13.142c57.565-35.114,96-98.495,96-170.858c0-69.547-35.51-130.784-89.379-166.613C316.675,64.11,308,48.75,308,32z"></path> <g> <path style="fill:#D0D8E0;" d="M395.961,191.867c0.217,11.624-0.479,23.474-2.168,35.488 c-13.51,96.091-90.325,172.908-186.414,186.434c-35.498,4.997-69.56,1.321-100.608-8.968c3.026,2.083,6.086,4.12,9.229,6.037V424 c0,8.837,7.163,16,16,16h176c8.837,0,16-7.163,16-16v-13.142c57.565-35.114,96-98.495,96-170.858 c0-17.522-2.266-34.508-6.513-50.692C410.843,179.232,395.767,181.452,395.961,191.867z"></path> </g> <path style="fill:#4C9BD5;" d="M72.239,160C59.333,183.786,52,211.036,52,240c0,92.784,75.216,168,168,168s168-75.216,168-168 c0-28.964-7.333-56.214-20.239-80H72.239z"></path> <path style="fill:#1470B7;" d="M386.966,258.271c-20.992,71.233-77.483,127.713-148.722,148.699 C316.431,398.52,378.502,336.456,386.966,258.271z"></path> <path style="fill:#FCCF63;" d="M194.584,241.248c-17.209,1.456-32.551,9.915-45.642,25.179c-1.257,1.466-1.256,3.663,0.001,5.129 c14.472,16.875,31.654,25.432,51.064,25.432c3.802,0,7.29-0.12,10.555-0.364c1.575-0.118,3.141,0.417,4.324,1.465 c6.751,5.98,12.374,8.898,17.117,8.898c1.396,0,2.691-0.728,3.416-1.92c0.729-1.193,0.775-2.676,0.137-3.917 c-1.131-2.19-1.494-5.66-1.057-9.915c4.597-1.984,8.705-4.507,12.409-7.602c1.597-1.335,3.93-1.204,5.4,0.269 c5.521,5.534,11.733,9.255,17.755,12.586c1.375,0.762,3.07,0.646,4.33-0.297c1.259-0.941,1.855-2.539,1.509-4.07 c-1.086-4.888-3.904-18.572-3.904-23.13c0-4.558,2.818-18.242,3.904-23.13c0.065-0.288,0.096-0.579,0.096-0.867 c0-1.244-0.582-2.438-1.605-3.203c-1.26-0.942-2.955-1.058-4.33-0.297c-6.026,3.333-12.242,7.057-17.766,12.597 c-1.467,1.472-3.797,1.608-5.393,0.276c-5.152-4.299-11.102-7.507-18.008-9.683c-1.18-4.756-1.57-10.317,0.482-13.542 c0.783-1.228,0.834-2.79,0.131-4.072c-0.701-1.279-2.045-2.075-3.505-2.075c-8.68,0-19.557,7.593-27.935,14.809 C197.089,240.648,195.873,241.138,194.584,241.248z"></path> <circle style="fill:#566E7F;" cx="169.998" cy="266.991" r="4"></circle> <circle style="fill:#E2E4E6;" cx="136" cy="244" r="4"></circle> <circle style="fill:#E2E4E6;" cx="148" cy="224" r="8"></circle> <circle style="fill:#E2E4E6;" cx="128" cy="196" r="12"></circle> <path style="fill:#F6B74E;" d="M181.554,294.184c5.899,1.853,12.052,2.803,18.453,2.803c3.802,0,7.29-0.12,10.555-0.364 c1.575-0.118,3.141,0.417,4.324,1.465c6.751,5.98,12.374,8.898,17.117,8.898c1.396,0,2.691-0.728,3.416-1.92 c0.729-1.193,0.775-2.676,0.137-3.917c-1.131-2.19-1.494-5.66-1.057-9.915c4.597-1.984,8.705-4.507,12.409-7.602 c1.597-1.335,3.93-1.204,5.4,0.269c5.521,5.534,11.733,9.255,17.755,12.586c1.375,0.762,3.07,0.646,4.33-0.297 c1.259-0.941,1.855-2.539,1.509-4.07c-1.086-4.888-3.904-18.572-3.904-23.13h-81.991 C190.008,278.456,186.839,287.161,181.554,294.184z"></path> <g> <path style="fill:#F6B74E;" d="M228.059,239.729c-8.464-2.103-31.525,1.099-32.414,1.33c0.786-0.029,1.569-0.066,2.363-0.066 c10.416,0,21.181,1.174,30.889,3.69C228.591,243.325,228.189,241.117,228.059,239.729z"></path> </g> <path style="fill:#D0D8E0;" d="M316,32H124c-8.837,0-16-7.163-16-16v0h224v0C332,24.837,324.837,32,316,32z"></path> <g> <path style="fill:#73AE43;" d="M228,400c-4.418,0-8-3.582-8-8v-40c0-4.418,3.582-8,8-8s8,3.582,8,8v40 C236,396.418,232.418,400,228,400z"></path> </g> <g> <path style="fill:#73AE43;" d="M220,400c-4.418,0-8-3.582-8-8v-24c0-4.418,3.582-8,8-8s8,3.582,8,8v24 C228,396.418,224.418,400,220,400z"></path> </g> <g> <path style="fill:#73AE43;" d="M236,400c-4.418,0-8-3.582-8-8v-24c0-4.418,3.582-8,8-8s8,3.582,8,8v24 C244,396.418,240.418,400,236,400z"></path> </g> <path style="fill:#7D4B22;" d="M268.352,392.506C266.947,392.193,265.499,392,264,392c-5.122,0-9.744,1.982-13.282,5.148 C247.912,389.493,240.628,384,232,384c-5.122,0-9.744,1.982-13.282,5.148C215.912,381.493,208.628,376,200,376 s-15.912,5.493-18.718,13.148C177.744,385.982,173.122,384,168,384c-7.046,0-13.212,3.663-16.775,9.168 C172.235,402.619,195.469,408,220,408c30.91,0,59.774-8.492,84.653-23.056C301.069,379.558,294.955,376,288,376 C278.151,376,270.01,383.133,268.352,392.506z"></path> </g> </g></svg>

icon_laundry_machine:
  custom_fields:
    icon: >
      <svg width="100%" height="100%" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M20.25 0.75H3.75C2.92157 0.75 2.25 1.42157 2.25 2.25V21.75C2.25 22.5784 2.92157 23.25 3.75 23.25H20.25C21.0784 23.25 21.75 22.5784 21.75 21.75V2.25C21.75 1.42157 21.0784 0.75 20.25 0.75Z" stroke="#71717A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M5.25 3.75H8.25" stroke="#71717A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M19 3.20001V4.20001" stroke="#71717A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M16 3.20001V4.20001" stroke="#71717A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M2.25 6.75H21.75" stroke="#71717A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M12 20.25C14.8995 20.25 17.25 17.8995 17.25 15C17.25 12.1005 14.8995 9.75 12 9.75C9.10051 9.75 6.75 12.1005 6.75 15C6.75 17.8995 9.10051 20.25 12 20.25Z" stroke="#71717A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> <path d="M9.75 15C9.75 14.4033 9.98705 13.831 10.409 13.409C10.818 13 11.3683 12.7647 11.9451 12.7507" stroke="#71717A" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"></path> </g></svg>
icon_play_pause:
  styles:
    custom_fields:
      play_pause:
        - top: -10%
        - right: 0
        - bottom: 0
        - left: 0
        - margin: auto
        - width: 25%
        - height: 25%
        - position: absolute
        - fill: "#dedede"
  custom_fields:
    play_pause: >
      [[[
        let style = `
          <style>
            .scale-up {
              animation: scale-up 1s forwards;
              cubic-bezier(.05, .5, .3, 1);
              transform-origin: center center;
            }
            @keyframes scale-up {
              0% {
                opacity: 0;
                transform: scale(0);
              }
              20% {
                transform: scale(1);
              }
              30% {
                opacity: 1;
              }
              80% {
                opacity: 1;
              }
              100% {
                opacity: 0;
              }
            }
          </style>
        `;
        if (variables.state === 'paused' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0h59.9v166H0zm106.1 0H166v166h-59.9z"/>
              </svg>
            `;
        }
        if (variables.state === 'playing' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 166 166">${style}
                <path class="scale-up" d="M0 0l166 83L0 166z"/>
              </svg>
            `;
        }
      ]]]

icon_hue:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -14%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M27.4 47.3h-4.9s-.7.1-.7.8.4.9.7.9h4.9c.3 0 .7-.1.7-.9s-.7-.8-.7-.8zm3.3-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-3H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9-.1-.8-.9-.8-.9-.8zm0-2.9H19.3s-.8 0-.8.8.6.9.8.9h11.5c.2 0 .8-.1.8-.9s-.9-.8-.9-.8zm5.2-23.2c-3.3-5.3-7-5.6-10.9-5.6-3.8 0-8.4.4-10.9 5.6-.1.1-.1.3.1.7.4.8 3.3 7.2 3.2 18.8 0 1.1-.1 1.6 0 1.7 0 .1 0 .7 1.1.7h13c1 0 1-.5 1.1-.7v-1.7c-.1-11.6 2.8-18 3.2-18.8.1-.4.1-.5.1-.7"/>
            <path class="${state} light-color" d="M14.1 15.3c3.4-.3 7-.4 10.9-.4 3.8 0 7.5.2 10.9.4.4-.4.7-.8.9-1.1C39 8.5 38.9 6.5 38.9 6c-.2-4.4-8.4-5-12.1-5h0-3.4c-3.7 0-12 .5-12.1 5 0 .5-.1 2.5 2.1 8.2 0 .3.3.8.7 1.1z"/>
          </svg>
        `;
      ]]]

icon_shade:
  styles:
    custom_fields:
      icon:
        - width: 77%
        - margin-left: -15%
        - margin-top: 1%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                100% {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M26.4 25.6c.6-.3 1.1-.7 1.1-1.3L25 17.9l-2.5 6.4c0 .7.6 1.1 1.1 1.3v20.8h-5.5v2.7h13.7v-2.7h-5.5V25.6z"/>
            <path class="${state} light-color" d="M24.6.9l-9.4.5c-.6.1-1.9 0-2.5 2.1s-2.4 9.1-4 16.9c-.2.7-.5 2-.5 2.3s-.4 1.6.9 1.6c.8.1 7.4.3 15.9.3 8.6 0 15.1-.3 15.9-.3 1.3-.1.9-1.3.9-1.6s-.3-1.6-.5-2.3c-1.6-7.8-3.4-14.8-4-16.9s-1.9-2-2.5-2.1c-1.6-.2-6.9-.4-9.4-.5"/>
          </svg>
        `;
      ]]]

icon_tv:
  styles:
    custom_fields:
      icon:
        - width: 87%
        - margin-top: -8%
        - fill: >
            [[[
              return variables.state_on
                  ? '#616161'
                  : '#9da0a2';
            ]]]
  custom_fields:
    icon: >
      [[[
        let style = `
          <style>
            @keyframes on {
              from {
                transform: scaleY(0);
              }
              to {
                transform: scaleY(1);
              }
            }
            .on {
              animation: on 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
            @keyframes off {
              from {
                transform: scaleY(1);
              }
              to {
                transform: scaleY(0);
              }
            }
            .off {
              animation: off 1s;
              transform-origin: -100% 46%;
              animation-fill-mode: forwards;
            }
          </style>
        `,
          path = `
            <path d="M46 9.2v27.5H4.1V9.2H46m2.4-2.4H1.6v32.3h46.7c.1 0 .1-32.3.1-32.3zM11.9 43.2h26.3c.6 0 1.1-.4 1.1-1v-.3c0-.6-.4-1.1-1-1.1H11.9c-.6 0-1.1.4-1.1 1v.3a1.11 1.11 0 0 0 1.1 1.1z"/>
          `,
          gradient = `
            <linearGradient id="A" gradientUnits="userSpaceOnUse" x1="5.401" y1="34.714" x2="43.817" y2="11.74">
              <stop offset="0" stop-color="#64acb7"/>
              <stop offset="1" stop-color="#7fdbe9"/>
            </linearGradient>
          `;
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        }
        if (variables.state_on && variables.timeout > 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${gradient} 
                <path d="M2.9,8h44.3v29.9H2.9V8z" fill="#20262890"/>
                <path class="on" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50"> ${style} ${gradient} 
                <path class="off" d="M2.9,8h44.3v29.9H2.9V8z" fill="url(#A)"/> ${path} 
              </svg>
            `;
        } else {
            return `
              <svg viewBox="0 0 50 50"> ${style} 
                ${path}
              </svg>
            `;
        }
      ]]]
icon_spot:
  styles:
    custom_fields:
      icon:
        - width: 74%
        - margin-left: -8%
        - margin-top: 3%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state_on && variables.timeout < 2000) {
            state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
            state = 'off';
        }
        if (variables.state_on && variables.timeout > 2000) {
            state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-11deg);
                }
                100% {
                  transform: rotateZ(-15deg);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-15deg);
                  animation-timing-function: cubic-bezier(0.7, 0, 0.84, 0);
                }
                70% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                75% {
                  transform: rotateZ(0deg);
                  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1);
                }
                88% {
                  transform: rotateZ(-4deg);
                }
                100% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
                animation-delay: -0.1s;
              }
              .off {
                animation: off 0.7s;
                transform-origin: 40% 20%;
                animation-fill-mode: forwards;
              }
              .on_timeout {
                transform: rotateZ(-15deg);
                transform-origin: 40% 20%;
              }
            </style>
            <path style="clip-path: url(#mask);" fill="#9da0a2" d="M40.5.8H17.1c-.1 0-.1 0-.1.1A3.12 3.12 0 0 0 20.1 4h6.1c.1 0 .1 0 .1.1v7.4L18 19.1l3.6 3.5 9.1-8.6c.4-.4.6-1 .7-1.6V4c0-.1 0-.1.1-.1h6c1.7.1 3.1-1.3 3-3.1z"/>
            <defs>
              <clipPath id="mask">
                <path class="${state}" d="M0 9.1h24l8.3 8.8H50V-9H0z"/>
              </clipPath>
            </defs>
            <path class="${state} light-color" d="M25.5 46.4s1.4.5 10.4-8.2c.5-.4 6.3-6.3 5.8-7.1-.7-.8-18.6-19.5-18.6-19.5s-.6-.9-8.6 6.4c-.6.5-8.7 8-7.7 9.1l18.7 19.3z"/>
          </svg>
        `;
      ]]]

icon_imac:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: 1%
        - margin-top: -5%
        - fill: >
            [[[ return variables.state_on ? '#72757c' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000
            ? 'on'
            : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from {
                  opacity: 0.5;
                  transform: scale(0.6);
                }
                100% {
                  opacity: 1;
                }
              }
              .on {
                animation: on 0.8s cubic-bezier(0.25, 1, 0.5, 1);
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M31.9 44.5c-1-.3-1.9.4-1.9-3.7h-9.9c0 4.2-.9 3.4-1.9 3.7s-.2.7-.2.7h14.1s.8-.3-.2-.7zM47.6 4.8H2.5c-1.1 0-2 .9-2 2v30.1c0 1.1.9 2 2 2h45c1.1 0 2-.9 2-2v-30a1.95 1.95 0 0 0-1.9-2.1zm-.7 26.4H3.2V7.6H47v23.6z"/>
          </svg>
        `;
      ]]]

icon_speaker:
  styles:
    custom_fields:
      icon:
        - width: 73%
        - margin-left: -9%
  custom_fields:
    icon: >
      [[[
        let style = `
          <style>
            @keyframes cone {
              35% {
                transform: scale(0.8);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              36% {
                transform: translateY(0%);
              }
              49% {
                transform: scale(1.25);
              }
              63% {
                transform: scale(0.85);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              77% {
                transform: scale(1.15);
                animation-timing-function: cubic-bezier(0, 0.55, 0.45, 1);
              }
              95% {
                transform: scale(1);
              }
            }
            .cone {
              animation: cone 1.2s;
              transform-origin: center;
            }
            @keyframes speaker {
              0% {
                transform: scale(1);
              }
              40% {
                transform: scale(1);
              }
              49% {
                transform: scale(0.95);
              }
              63% {
                transform: scale(1);
              }
              77% {
                transform: scale(0.95);
              }
              100% {
                transform: scale(1);
              }
            }
            .speaker {
              animation: speaker 1.3s;
              transform-origin: center;
            }
          </style>
        `,
          paths = `
            <g class="speaker">
              <path fill="#686868" d="M35.8 46.9H14.2c-1.1 0-2-1-2-2.3V6.7c0-1.3.9-2.3 2-2.3h21.5c1.1 0 2 1 2 2.3v37.9c0 1.2-.9 2.3-1.9 2.3z"/>
              <path fill="#2a2a2a" d="M39.2 1H10.8C9.4 1 8.3 2.1 8.2 3.5v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3c1.4 0 2.5-1.2 2.6-2.6V3.5c0-1.4-1.1-2.5-2.5-2.5zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4C22.5 8 23.6 7 25 7zm10.2 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6s-.1-1.1-.4-1.9.6-.9.6-.9h19.3c0-.1.8-.1.5.9z"/>
            </g>
            <path class="cone" fill="#e5dd00" d="M25 15.7c-6.2 0-11.3 5.1-11.3 11.3S18.8 38.3 25 38.3 36.3 33.2 36.3 27c-.1-6.3-5.1-11.3-11.3-11.3zm0 14.5a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c-.1 1.9-1.5 3.3-3.3 3.3z"/>
          `;
        if (variables.state_on && variables.timeout < 2000) {
            return `
              <svg viewBox="0 0 50 50">
                ${style}
                ${paths}
              </svg>
            `;
        }

        return variables.state_on && variables.timeout > 2000
            ? `
              <svg viewBox="0 0 50 50">
                ${paths}
              </svg>
            `
            : `
              <svg viewBox="0 0 50 50">
                <path fill="#9da0a2" d="M25 18.6c-4.6 0-8.4 3.8-8.4 8.4s3.8 8.4 8.4 8.4 8.4-3.8 8.4-8.4-3.7-8.4-8.4-8.4zm0 11.7a3.33 3.33 0 0 1-3.3-3.3 3.33 3.33 0 0 1 3.3-3.3 3.33 3.33 0 0 1 3.3 3.3c0 1.8-1.4 3.3-3.3 3.3zM39.2 1H10.9C9.4 1 8.3 2.1 8.3 3.6v42.9a2.65 2.65 0 0 0 2.6 2.6h28.3a2.65 2.65 0 0 0 2.6-2.6v-43C41.7 2 40.5.9 39.2 1zM25 7c1.3 0 2.4 1.1 2.4 2.4s-1.1 2.4-2.4 2.4-2.4-1.1-2.4-2.4S23.7 7 25 7zm10.3 35.5l-.4 1.9s-.2.6-.6.6H15.8c-.4 0-.6-.6-.6-.6l-.4-1.9c-.2-.9.6-.9.6-.9h19.3s.9.1.6.9zM25 38.2c-6.2 0-11.3-5.1-11.3-11.3a11.29 11.29 0 1 1 22.6 0c.1 6.3-5 11.3-11.3 11.3z"/>
              </svg>
            `;
      ]]]

icon_lamp:
  styles:
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -16%
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on && variables.timeout < 2000 ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: scale(0.85);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.95);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
              }
              .on {
                animation: on 0.8s;
                transform-origin: center;
              }
            </style>
            <path fill="#9da0a2" d="M26.5 21.8l3.8-6.1H19.7l3.8 6.1c-5 .7-6.3 5.8-5.7 10.2.7 5.1 3.2 10.1 5.7 14.4H19v2.5h11.8v-2.5h-4.5C29 42 31.4 37 32.1 32c.6-4.4-.6-9.4-5.6-10.2zm3.1 9.1c-.3 4.3-2.3 8.7-4.4 12.4l-.2.1v.1-.1c-1.8-3-3.3-6.4-4.1-9.7-.7-3.1-1-7.2 2.7-8.4 1.4-.5 3.1-.1 4.2.8 1.6 1 1.8 3 1.8 4.8z"/>
            <path class="${state} light-color" d="M38.1 20L35.7 3.8c-.3-1.9-.4-1.7-.6-2-.9-.6-2.3-.7-2.3-.7H17.4s-1.4 0-2.3.7c-.2.3-.3.1-.6 2C14 5.7 11.9 20 11.9 20s5.8.3 13.4.3h0c7.3 0 12.8-.3 12.8-.3z"/>
          </svg>
        `;
      ]]]

icon_climate:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
        - fill: >
            [[[ return variables.state === 'cool' || variables.state === 'fan_only' ? '#5daeea' : variables.state ==='heat' ? '#a34841' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      <svg viewBox="0 0 50 50">
        <path d="M36.8 1.2v1.7a5.34 5.34 0 0 1-5.3 5.3H18.4a5.34 5.34 0 0 1-5.3-5.3V1.2c-2.6.4-4.7 2.8-4.7 5.6v36.5c0 3.1 2.6 5.7 5.7 5.7h21.8c3.1 0 5.7-2.6 5.7-5.7V6.8c0-2.8-2.1-5.2-4.8-5.6zm-1.7 35.6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3a9.75 9.75 0 0 1-1.4.6c-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zm0-6c-.2 0-.4 0-.5-.1-.4-.1-1.2-.2-2.4-.6-.5-.2-.8-.3-1.2-.4-.3-.1-.7-.3-1.4-.5-1-.4-1.5-.5-1.9-.6-.5-.1-1.1-.2-1.9-.2s-1.4.2-1.9.4c-1 .3-1.8.7-2.1.9l-.6.3c-.4.2-.8.4-1.4.6-.3.1-.9.3-1.6.3h-.3c-.4 0-1 0-2-.2-.3-.1-.6-.1-.8-.2v-2.7l1.3.3c.5.1 1.3.2 1.7.2.5 0 .9-.2 1.1-.2.4-.1.6-.2 1-.4.2-.1.4-.2.7-.4.4-.2 1.3-.7 2.5-1 .6-.2 1.4-.4 2.5-.5s2 .1 2.5.2c.6.1 1.2.3 2.2.7l1.5.5c.3.1.6.2 1 .4 1 .3 1.8.5 2.1.5h.1v2.7zM15.7 1.9v-.8h18.6V3c0 1.5-1.2 2.8-2.8 2.8H18.4c-1.5 0-2.8-1.2-2.8-2.8V1.9z"/>
      </svg>

icon_bathroom:
  styles:
    custom_fields:
      icon:
        - width: 78%
        - margin-left: -10%
  custom_fields:
    icon: >
      [[[
        let state;
        if (variables.state_on && variables.timeout < 2000) {
          state = 'on';
        } 
        if (variables.state === 'off' && variables.timeout < 2000) {
          state = 'off';
        }
        if (variables.state_on && variables.timeout > 2000) {
          state = 'on_timeout';
        }
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                0% {
                  transform: rotateZ(0deg) translate(0%, 0%);
                }
                100% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
              }
              @keyframes off {
                0% {
                  transform: rotateZ(-90deg) translate(-1.5%, 0%);
                }
                45% {
                  transform: rotateZ(-40deg);
                }
                55% {
                  transform: rotateZ(0deg);
                }
                65% {
                  transform: rotateZ(-15deg);
                }
                75% {
                  transform: rotateZ(0deg);
                }
                85% {
                  transform: rotateZ(-5deg);
                }
                95% {
                  transform: rotateZ(0deg);
                }
              }
              .on {
                animation: on 0.45s;
                animation-fill-mode: forwards;
                transform-origin: 45% 41%;
                transition-timing-function: cubic-bezier(0.85, 0, 0.15, 1);
              }
              .on_timeout {
                transform: rotateZ(-90deg) translate(-1.5%, 0%);
                transform-origin: 45% 41%;
              }
              .off {
                animation: off 1.1s linear;
                animation-delay: 0.05s;
                animation-fill-mode: both;
                transform-origin: 45% 41%;
              }
            </style>
            <g class="light-color">
              <path d="M12.9 1.2h2.5c1.6 0 2.9 1.3 2.9 2.9v18.6c0 1.4 1.1 2.5 2.4 2.5h20.5c.5 0 1 .4.9 1-.1 2.6-1.2 9.6-10.2 11v7.6c0 .2.2.4.4.4h1.5a1.58 1.58 0 0 1 1.6 1.6v.3a1.58 1.58 0 0 1-1.6 1.6H11a1.58 1.58 0 0 1-1.6-1.6v-.3a1.58 1.58 0 0 1 1.6-1.6h1.6c.2 0 .4-.2.4-.4v-7.6s-5.2-.3-5.2-5.9V4.2c0-1.6 1.3-2.9 2.9-2.9l2.2-.1c0 .1 0 0 0 0z"/>
              <path class="${state}" d="M22.3 18.8h18.3a1.58 1.58 0 0 1 1.6 1.6v.6a1.58 1.58 0 0 1-1.6 1.6h-19c-.4 0-.7-.3-.8-.7v-2.3c0-.4.3-.7.7-.8h.8z"/>
            </g>
          </svg>
        `;
      ]]]

icon_fan2:
  styles:
    custom_fields:
      icon:
        - width: 75%
        - margin-left: -3%
  custom_fields:
    icon: >
      [[[
        let path = `
          <circle cx="25" cy="25" r="6.6"/>
          <path d="M31.9 30.4c-.5.6-1.1 1.1-1.7 1.5-1.4 1.1-3.2 1.7-5.2 1.7-2.3 0-4.5-.9-6-2.4-.9 1.1-1.6 2.3-2.3 3.2l-4.9 5.4c-1.8 2.7.3 5.6 2.5 7 3.9 2.4 9.8 3.1 14.1 1.9 4.6-1.3 7.9-4.7 7.4-9.7-.2-3.4-1.9-6-3.9-8.6zM17 28.3c-.4-1-.6-2.1-.6-3.3a8.7 8.7 0 0 1 6.4-8.4l-1.6-3.5L19 6.2c-1.5-2.8-5-2.5-7.3-1.2-4 2.2-7.5 6.9-8.7 11.3-1.2 4.6.2 9.2 4.7 11.3 3.1 1.3 6.1 1.2 9.3.7zm26.9-17.6c-3.3-3.4-8-4.6-12.1-1.8-2.8 1.8-4.2 4.6-5.5 7.5 4.2.6 7.4 4.2 7.4 8.6 0 .9-.1 1.7-.4 2.5 1.3.2 2.8.3 3.8.4 2.3.4 4.7 1.3 7.1 1.7 3.2.3 4.7-3 4.8-5.6.3-4.6-1.9-10.1-5.1-13.3z"/>
        `,
        style = `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes rotate {
                0% {
                  visibility: visible;
                  transform: rotate(0deg) translateZ(0);
                }
                100% {
                  transform: rotate(1080deg) translateZ(0);
                }
              }
              .start {
                animation: rotate 2.8s ease-in;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .on {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                animation-delay: 2.8s;
                visibility: hidden;
                will-change: transform;
              }
              .end {
                animation: rotate 2.8s;
                transform-origin: center;
                fill: #9ca2a5;
                animation-timing-function: cubic-bezier(0.61, 1, 0.88, 1);
                will-change: transform;
              }
              .start_timeout {
                animation: rotate 1.8s linear infinite;
                transform-origin: center;
                fill: #5daeea;
                visibility: hidden;
                will-change: transform;
              }
              .end_timeout {
                fill: #9ca2a5;
              }
            </style>
        `;
        if (variables.state_on && variables.timeout < 2000) {
          return `${style}<g class="start">${path}</g><g class="on">${path}</g></svg>`;
        }
        if (variables.state === 'off' && variables.timeout < 2000) {
          return `${style}<g class="end">${path}</g></svg>`;
        }
        if (variables.state_on && variables.timeout > 2000) {
          return `${style}<g class="start_timeout">${path}</g></svg>`;
        } else {
          return `${style}<g class="end_timeout">${path}</g></svg>`;
        }
      ]]]

icon_closet:
  styles:
    custom_fields:
      icon:
        - width: 80%
        - margin-left: -16%
  custom_fields:
    icon: >
      [[[
        let room = `d="M11.4,1.4h27.2v43.1H11.4V1.4z" fill="#bcbcbc"`,
          door = `d="M11.4 1.4v43.1h27.2V1.4H11.4zm23 23.4c0 1.1-.9 1.9-1.9 1.9h0c-1.1 0-1.9-.9-1.9-1.9V21c0-1.1.9-1.9 1.9-1.9h0c1.1 0 1.9.9 1.9 1.9v3.8z"`;

        if (variables.state_on && variables.timeout < 2000) {
          return `
            <style>
              .state {
                animation: state 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              .opacity {
                animation: opacity 0.5s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
              }
              @keyframes state {
                0% {
                  transform: none;
                  fill: #9da0a2;
                }
                100% {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              }
              @keyframes opacity {
                0% {
                  opacity: 0;
                }
                100% {
                  opacity: 1;
                }
              }
            </style>
            <svg viewBox="0 0 50 50">
              <path class="opacity" ${room}/>
              <path class="state" ${door}/>
            </svg>
          `;
        }

        if (variables.state_on && variables.timeout > 2000) {
          return `
            <svg viewBox="0 0 50 50">
              <style>
                .state_timeout_on {
                  transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                  fill: #b68349;
                }
              </style>
              <path ${room}/>
              <path class="state_timeout_on" ${door}/>
            </svg>
          `;
        }

        return variables.state === 'off' && variables.timeout < 2000 ? `
          <style>
            .state {
              animation: state 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .opacity {
              animation: opacity 0.4s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;
            }
            .reverse {
              animation-direction: reverse;
            }
            @keyframes state {
              0% {
                transform: none;
                fill: #9da0a2;
              }
              100% {
                transform: skewY(10deg) translate(4.5%, -3.9%) scaleX(0.8);
                fill: #b68349;
              }
            }
            @keyframes opacity {
              0% {
                opacity: 0;
              }
              100% {
                opacity: 1;
              }
            }
          </style>
          <svg viewBox="0 0 50 50">
            <path class="opacity reverse" ${room}/>
            <path class="state reverse" ${door}/>
          </svg>
        ` : `
          <svg viewBox="0 0 50 50">
            <style>
              .state_timeout_off {
                fill: var(--state-icon-color);
              }
            </style>
            <path class="state_timeout_off" ${door}/>
          </svg>
        `;
      ]]]

icon_away:
  state_display: Auto
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -1%
        - margin-top: -1%
        - fill: >
            [[[ return variables.state_on ? '#516d82' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                10%,
                20%,
                100% {
                  transform: rotateZ(0deg);
                }
                30%,
                50%,
                70% {
                  transform: rotateZ(7deg);
                }
                90% {
                  transform: rotateZ(3deg);
                }
                40%,
                60%,
                80% {
                  transform: rotateZ(-7deg);
                }
              }
              .on {
                animation: on 1.35s cubic-bezier(0.5, 1, 0.89, 1);
                animation-fill-mode: both;
                transform-origin: 70% 80%;
                animation-delay: 0s;
              }
            </style>
            <path class="${state}" d="M32.1 18.4s.3-1.6.7-2.1c.3-.6.9-1.4 1.6-1.8.6-.4 1.1-.7 1.4-.7s.7-.1 1 .1.6.4.8 1.3l.3 2.7.1 2.4.2 4.1c0 .3.2 3.1.2 3.3s.2 2.7.2 3.2l-.1 2.5c.1 1.6.5 3.1-.2 4.6-.6 1.4-1.7 2.7-2.9 3.6-.5.4-1.9 1.3-2.9 1.7-1.1.5-2.2.8-3.3 1.1-.5.1-1.4.4-2.3.3s-1.8-.6-2.1-1l-1.6-2.3c-.6-.8-2.1-2.3-2.3-2.5l-2.7-2.8c-.2-.2-2.7-3.5-2.9-3.8l-3.1-4.7-1.8-3.2-1.5-2.8-.9-1.8c-.1-.2-.3-1.1-.2-1.4.3-1.2 1.4-1.4 2.3-.7.3.2.9 1 1.1 1.3s6.1 8.1 6.1 8.1c.2.3.7.3.9 0s-.1-.7-.2-.9c-.4-.6-8.3-11.5-8.3-11.5s-.6-.9-.7-1.1c-.3-1.1 0-2.3 1.1-2.7s1.9.3 2.6 1.1c.3.3 8.3 11.5 8.3 11.5.2.2.3.3.5.3.3 0 .5-.4.4-.7-.1-.2-.5-.9-.5-.9L11.8 9c-.6-1-.9-2-.1-3 .7-.8 2.2-1.3 3-.2.3.3 10.1 14.3 10.1 14.3.2.2.5.4.7.3.5-.1.3-.7.1-1-.1-.2-8.4-11.8-8.4-11.8-.4-.9-.6-2 .2-2.8 1-1.1 2.5-.5 3.3.5.2.3 1 1.4 1 1.4l2.7 3.7c.1.2 3.4 4.4 3.8 4.8.9 1.1 1.8 2.2 2.7 3.2l.5.5c.1.1.1.4.1.8 0 1.3.1 2.6.1 3.9 0 .2.1.4.2.6.3.3.6.1.7-.2.1-.2 0-2.4 0-2.7-.3-.3-.5-1.3-.4-2.9zM12.2 46.9s-2.8-.8-4.8-2.7-2.6-2.7-2.8-3-1.8-3-2-3.6c-.2-.5-.2-.7.2-1 .4-.4 1-.5 1.3.1.1.2.4 1 .5 1.2s1 1.9 1.7 2.8 1.6 2.2 4.4 3.8c.6.3 1.2.6 1.9.9.3.1.6.2.8.4.1.2.1.6-.1.8-.2.4-.7.4-1.1.3zM7.1 30.7l.9 3.1c.3.7 1.1 2.3 1.9 3.3s2.4 2.6 3.4 3.2 2 1.1 3 1.5c1 .3 1.1.4 1.2.5.3.4.2 1.2-.4 1.3-.2 0-1.2 0-1.8-.3L12 41.7c-.5-.4-3.9-3.1-5.1-6S5.3 31 5.2 30.4s-.2-1.1 0-1.4c.3-.4.9-.8 1.3-.3.2.3.3.6.3.9.1 0 .2.8.3 1.1zm26.8-25s.2-.1.5-.1.8.3 1.4.7 1.9 1 3.6 2.9 2.9 3.9 3.4 5.8c.5 1.8.8 3.1.9 5.5 0 .5.1 1.6 0 1.7-.2.5-.5.7-1 .7-.6 0-.7-.5-.7-1l-.1-2.9c-.1-.6-.3-1.9-.7-2.9-.3-1-.7-2.3-1.7-3.6-.9-1.3-2.1-2.8-3.2-3.5l-2.4-1.5c-.6-.6-.7-1.2 0-1.8zm4.9-2.5s.3-.2.5-.1c.2 0 .7.3.9.4s2.1 1.3 3.6 3c1.5 1.6 3.5 5.1 3.7 7.4.1.4.2.9 0 1-.2.2-.4.4-.7.4-.2 0-.5 0-.7-.1-.1-.2-.4-1.1-.4-1.3s-.6-2-1.1-3.1C44 9.7 43.5 8.5 42 7.1s-2.2-1.9-2.8-2.2-1.1-.6-1.1-1c.1-.3.3-.6.7-.7z"/>
          </svg>
        `;
      ]]]

# ─── icon_vacuum_cleaning (fixed) ─────────────────────────────────────────────
icon_vacuum_cleaning:
  state_display: >
    [[[           // Pretty-print the real vacuum state
      const s = variables.vacuum_state || 'unknown';
      return s.charAt(0).toUpperCase() + s.slice(1);
    ]]]

  variables:
    # Safe lookup (works in HA’s old JS engine)
    vacuum_state: >
      [[[ return states['vacuum.s8_pro_ultra']
            ? states['vacuum.s8_pro_ultra'].state
            : null; ]]]
    state_on: >
      [[[ return variables.vacuum_state === 'cleaning'; ]]]

  styles:
    card:
      - transition: all 0.3s ease-out
      # turn card background white when cleaning
      - background-color: >
          [[[ return variables.state_on
                ? 'rgba(255,255,255,0.85)'
                : 'rgba(115,115,115,0.25)'; ]]]
    custom_fields:
      icon:
        - width: 79%
        - margin-left: -1%
        - margin-top: -1%
        - fill: >
            [[[ return variables.state_on ? '#44a9ff' : '#9da0a2'; ]]]

  custom_fields:
    icon: >
      [[[ const cls = variables.state_on ? 'on' : '';
          return `
        <svg viewBox="0 0 50 50">
          <style>
            @keyframes spin {
              from { transform: rotate(0deg); }
              to   { transform: rotate(360deg); }
            }
            .on {
              animation: spin 1.6s linear infinite;
              transform-origin: 50% 50%;
            }
          </style>

          <circle class="${cls}" cx="25" cy="25" r="20"/>
          <circle cx="25" cy="25" r="15" fill="white" opacity="0.35"/>
          <rect  class="${cls}" x="22" y="6"  width="6" height="4" rx="1"/>
          <line  class="${cls}" x1="5"  y1="25" x2="12" y2="25" stroke-width="3" stroke-linecap="round"/>
          <line  class="${cls}" x1="38" y1="25" x2="45" y2="25" stroke-width="3" stroke-linecap="round"/>
          <line  class="${cls}" x1="25" y1="38" x2="25" y2="45" stroke-width="3" stroke-linecap="round"/>
        </svg>`; ]]]

icon_home:
  state_display: Auto
  styles:
    card:
      - transition: all 0.3s ease-out
    custom_fields:
      icon:
        - width: 72%
        - margin-left: -1%
        - fill: >
            [[[ return variables.state_on ? '#c7983e' : '#9da0a2'; ]]]
  custom_fields:
    icon: >
      [[[
        let state = variables.state_on ? 'on' : null;
        return `
          <svg viewBox="0 0 50 50">
            <style>
              @keyframes on {
                from,
                20%,
                40%,
                60%,
                80%,
                to {
                  animation-timing-function: cubic-bezier(0.215, 0.61, 0.355, 1);
                }
                0% {
                  transform: scale(0.3);
                }
                20% {
                  transform: scale(1.1);
                }
                40% {
                  transform: scale(0.9);
                }
                60% {
                  transform: scale(1.03);
                }
                80% {
                  transform: scale(0.97);
                }
                to {
                  transform: scale(1);
                }
              }
              .on {
                animation: on 1s;
                transform-origin: center;
              }
            </style>
            <path class="${state}" d="M42.2 28.3c0-.8-.2-1-.2-1L26 12.1s-.5-.4-1-.4-1 .3-1 .3L8.2 27.1c-.4.5-.4.9-.4.9v18.3c0 1.1.9 2 1.9 2h8.2a1.47 1.47 0 0 0 1.5-1.5v-14a1.47 1.47 0 0 1 1.5-1.5h8.4a1.47 1.47 0 0 1 1.5 1.5v14a1.47 1.47 0 0 0 1.5 1.5h8.2c1.1 0 2-.9 2-1.9 0-.2-.3-18.1-.3-18.1zM7.3 25l-1.6 1.5s-.3.3-.5.3-.5 0-.8-.2c-.2-.2-2-2.8-2-2.8s-.1-.4-.1-.7c.1-.3.2-.7.3-.8.4-.1 21.5-20.1 21.5-20.1s.4-.3.9-.3c.4 0 .8.1.9.2s.5.4.5.4l8.9 8.5V6s.1-.4.2-.7c.1-.2.3-.3.4-.3s.3-.1.3-.1h3s.3.1.4.3a1.08 1.08 0 0 1 .3.7v9.8l7.2 6.9s.2.3.3.4c.1.2.1.7.1.7 0 .1-.1.4-.2.5s-1.6 2.5-1.6 2.5-.1.3-.3.3c-.2.1-.4.1-.7 0-.2-.1-.5-.4-.5-.4L26.4 9.4s-.3-.3-.5-.4-.4-.2-.8-.2-.5.1-.8.1c-.1.1-.4.3-.7.5C23.3 9.8 7.3 25 7.3 25z"/>
          </svg>
        `;
      ]]]

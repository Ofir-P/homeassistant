- id: '1672140546661'
  alias: GitHub Push
  description: Everyday in 4AM will update the github.
  triggers:
  - at: 04:00:00
    trigger: time
  conditions: []
  actions:
  - data: {}
    action: shell_command.pushupdates_to_github
  - data:
      message: "\U0001F916 Automation - GitHub Push"
    action: notify.supervisor_telegram
  mode: single
- id: '1672416137952'
  alias: Low battery level detection & notification for all battery sensors
  description: ''
  use_blueprint:
    path: sbyx/low-battery-level-detection-notification-for-all-battery-sensors.yaml
    input:
      time: '19:00:00'
      exclude:
        entity_id:
        - sensor.elians_iphone_battery_level
        - sensor.ofir_honor_magic_5_pro_battery_level
      actions:
      - service: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - {{sensors}} has low on battery, please
            replace it."
- id: '1673808016982'
  alias: Bedroom A/C Bedroom OFF
  description: ''
  triggers:
  - alias: At 1:00 am
    at: 01:00:00
    id: 1:00 am
    trigger: time
  - entity_id:
    - input_select.bedroom_ac_status
    to: 'On'
    id: Bedroom A/C turned on
    alias: Bedroom A/C turned on
    trigger: state
  - entity_id:
    - input_select.bedroom_ac_status
    to: 'Off'
    id: Bedroom A/C turned off
    alias: Bedroom A/C turned off
    trigger: state
  - entity_id:
    - timer.a_c_timer
    to: idle
    id: Timer Finished
    from: active
    alias: Bedroom A/C timer finished/canceled
    trigger: state
  conditions:
  - condition: time
    before: 05:30:00
    after: 01:00:00
    alias: Time between 1 am & 5 am
  actions:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: 1:00 am
          alias: Triggered at 01:00 am
        - condition: trigger
          id: Bedroom A/C turned on
          alias: Triggered by Bedroom A/C turned on
        alias: Triggered by 1:00 am or Bedroom A/C turned on
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'On'
      sequence:
      - data:
          duration: 01:30:00
        alias: Start Bedroom A/C Timer
        target:
          entity_id: timer.a_c_timer
        action: timer.start
    - conditions:
      - condition: trigger
        id: Bedroom A/C turned off
        alias: Bedroom A/C turned off
      - condition: state
        entity_id: input_select.bedroom_ac_status
        state: 'Off'
      sequence:
      - data: {}
        alias: Cancel Bedroom A/C Timer
        target:
          entity_id: timer.a_c_timer
        action: timer.cancel
    - conditions:
      - condition: trigger
        id: Timer Finished
        alias: Bedroom A/C Timer Finished
      sequence:
      - data: {}
        target:
          entity_id: climate.bedroom_ac
        action: climate.turn_off
      - data:
          message: "\U0001F916 Automation - Bedroom A/C automation has closed the
            A/C!"
        action: notify.supervisor_telegram
  mode: single
- id: '1675145318623'
  alias: New Item Added to Shopping List
  description: Notification to Telegram Group when new Item has been added to Shopping
    List.
  triggers:
  - event_type: shopping_list_updated
    event_data:
      action: add
    trigger: event
  conditions: []
  actions:
  - data:
      message: "\U0001F6D2 {{ trigger.event.data.item.name }}\nhas been added to the
        shopping list.\n"
      data:
        clickAction: /shopping-list
        url: /shopping-list
    action: notify.home_assistant_group
  mode: single
- id: '1676503252475'
  alias: Hallway Motion Light Control
  description: Gentle hallway light from 00:00-06:20 AM for nighttime navigation with
    adaptive brightness
  triggers:
  - trigger: state
    entity_id: binary_sensor.bedroom_motion_sensor_occupancy
    to: 'on'
    id: motion_detected
    enabled: true
  - trigger: state
    entity_id: binary_sensor.bedroom_motion_sensor_occupancy
    to: 'off'
    for:
      hours: 0
      minutes: 1
      seconds: 0
    id: motion_cleared
    enabled: true
  - trigger: state
    entity_id: light.yeelink_color5_6079_light
    to: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    id: light_timeout
  conditions:
  - condition: time
    after: 00:00:00
    before: 06:20:00
    alias: Nighttime window 00:00-06:20
  - condition: template
    value_template: '{{ (now() - states.automation.red_alert.attributes.last_triggered).total_seconds()
      > 720 or states.automation.red_alert.attributes.last_triggered is none }}'
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: motion_detected
      - condition: state
        entity_id: light.yeelink_color5_6079_light
        state: 'off'
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'Off'
      sequence:
      - action: light.turn_on
        target:
          entity_id: light.yeelink_color5_6079_light
        data:
          brightness_pct: '{% if now().hour < 3 %} 15 {% else %} 25 {% endif %}'
          rgb_color:
          - 255
          - 240
          - 200
          transition: 2
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Hallway light on (gentle mode, {% if now().hour < 3
            %} 15 {% else %} 25 {% endif %}%) at {{ now().strftime('%H:%M:%S') }}"
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: motion_cleared
        - condition: trigger
          id: light_timeout
      - condition: state
        entity_id: light.yeelink_color5_6079_light
        state: 'on'
      sequence:
      - action: light.turn_off
        target:
          entity_id: light.yeelink_color5_6079_light
        data:
          transition: 15
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Hallway light off  {% if trigger.id == 'motion_cleared'
            %}after 1 min no motion {% else %}after 3-min timeout{% endif %} at {{
            now().strftime('%H:%M:%S') }}"
  mode: single
- id: '1676677991115'
  alias: Notify with camera snapshot when motion is detected and both of you are not
    home
  description: When Elian & Ofir are not home and motion detected person
  triggers:
  - entity_id:
    - binary_sensor.kitchen_presence_sensor_presence
    to: 'on'
    from: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 3
    trigger: state
  - entity_id:
    - binary_sensor.living_room_right_window_contact
    - binary_sensor.living_room_left_window_contact
    - binary_sensor.main_door_sensor_contact
    from: 'off'
    to: 'on'
    trigger: state
  conditions:
  - condition: and
    conditions:
    - condition: device
      device_id: 3991a8dcff5132448a99a281daf3577d
      domain: device_tracker
      entity_id: ee5300687733e0be5478ba30e2f369e0
      type: is_not_home
    - condition: device
      device_id: 611a494457823cb15ab854ae5b741ef0
      domain: device_tracker
      entity_id: device_tracker.elians_iphone
      type: is_not_home
  - condition: state
    entity_id: vacuum.s8_pro_ultra
    state: docked
    attribute: state
  - condition: state
    entity_id: binary_sensor.living_room_person
    state: 'on'
  actions:
  - data:
      filename: /config/www/tmp/snapshot_living_room_sub.jpg
    target:
      entity_id: camera.living_room_sub
    action: camera.snapshot
  - data:
      authentication: digest
      file: /config/www/tmp/snapshot_living_room_sub.jpg
      caption: "\U0001F916 Automation - Notify with camera snapshot when motion is
        detected!"
    action: telegram_bot.send_photo
  mode: single
- id: '1687258354025'
  alias: Backup failed notification
  description: Send notification to Supervisor telegram group when backup has failed
    to upload to NAS / Google Drive.
  triggers:
  - entity_id:
    - binary_sensor.backups_stale
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F6D1 Backup failed!  \U0001F6D1 "
    action: notify.supervisor_telegram
  mode: single
- id: '1697368945970'
  alias: Red Alert
  description: Hod HaSharon & Ramla Red Alert with Quick Response
  triggers:
  - trigger: state
    entity_id: binary_sensor.oref_alert_home
    from: 'off'
    to: 'on'
    id: home_alert
  - trigger: state
    entity_id: binary_sensor.oref_alert_ramla
    from: 'off'
    to: 'on'
    id: ramla_alert
  conditions: []
  actions:
  - action: notify.supervisor_telegram
    data:
      message: "\U0001F916 \U0001F680 Red Alert in {{\n  'Hod HaSharon and Ramla'
        if \n    (states('binary_sensor.oref_alert_home') == 'on' and \n     states('binary_sensor.oref_alert_ramla')
        == 'on') \n  else \n    'Hod HaSharon' if states('binary_sensor.oref_alert_home')
        == 'on' \n  else \n    'Ramla' if states('binary_sensor.oref_alert_ramla')
        == 'on' \n  else \n    'Unknown' \n}} \U0001F680\n"
  - action: notify.mobile_app_elians_iphone
    data:
      message: "\U0001F680 Red Alert in {{\n  'Hod HaSharon and Ramla' if \n    (states('binary_sensor.oref_alert_home')
        == 'on' and \n     states('binary_sensor.oref_alert_ramla') == 'on') \n  else
        \n    'Hod HaSharon' if states('binary_sensor.oref_alert_home') == 'on' \n
        \ else \n    'Ramla' if states('binary_sensor.oref_alert_ramla') == 'on' \n
        \ else \n    'Unknown' \n}} \U0001F680\n"
  - if:
    - condition: and
      conditions:
      - condition: state
        entity_id: binary_sensor.any_phone_at_home
        state: 'on'
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      data:
        message: "\U0001F680 Red Alert in {{ alert_location }} \U0001F680"
  - if:
    - condition: state
      entity_id: light.shower_l1
      state: 'on'
    then:
    - action: notify.alexa_media
      data:
        message: <audio src='https://3t6d68jf8e966qfhla8sjf21kyd3jk0d.ui.nabu.casa/local/mp3/Red_Alert_15_Seconds.mp3'/>
        target: media_player.shower_echo_dot
        data:
          type: tts
  - if:
    - condition: state
      entity_id: binary_sensor.office_presence_sensor_presence
      state: 'on'
    then:
    - action: scene.create
      data:
        scene_id: office_before_alert
        snapshot_entities:
        - light.office_wall_light
        - light.ofir_desk_led
    - repeat:
        count: 60
        sequence:
        - action: light.toggle
          target:
            entity_id:
            - light.office_wall_light
            - light.ofir_desk_led
          data: {}
        - delay:
            milliseconds: 350
    - action: scene.turn_on
      target:
        entity_id: scene.office_before_alert
      data: {}
  - if:
    - condition: state
      entity_id: binary_sensor.any_phone_at_home
      state: 'on'
    then:
    - action: scene.create
      data:
        scene_id: home_before_alert
        snapshot_entities:
        - light.yeelink_color5_6079_light
        - light.living_room_l1
        - light.kitchen_l1
        - light.kitchen_l2
    - action: light.turn_on
      target:
        entity_id:
        - light.yeelink_color5_6079_light
        - light.living_room_l1
        - light.kitchen_l1
        - light.kitchen_l2
      data: {}
    - delay:
        minutes: 10
    - action: scene.turn_on
      target:
        entity_id: scene.home_before_alert
      data: {}
  - delay:
      minutes: 12
  - if:
    - condition: state
      entity_id: binary_sensor.oref_alert_home
      state: 'off'
    - condition: state
      entity_id: binary_sensor.oref_alert_ramla
      state: 'off'
    then:
    - action: light.turn_off
      target:
        entity_id:
        - light.office_wall_light
        - light.ofir_desk_led
        - light.yeelink_color5_6079_light
        - light.living_room_l1
        - light.kitchen_l1
        - light.kitchen_l2
      data: {}
  mode: single
  variables:
    alert_location: '{% if trigger.id == ''home_alert'' %} Hod HaSharon {% elif trigger.id
      == ''ramla_alert'' %} Ramla {% else %} Unknown {% endif %}

      '
    is_nighttime: '{{ now().hour >= 22 or now().hour < 6 }}

      '
- id: '1706093864988'
  alias: Water Leakage Notification
  description: Notifies of water leaks and shuts off relevant smart plugs in affected
    areas if devices are on
  triggers:
  - trigger: state
    entity_id: binary_sensor.water_leak_shower_sink_water_leak
    to: 'on'
    id: shower_sink
    for:
      seconds: 5
  - trigger: state
    entity_id: binary_sensor.water_leak_office_sink_water_leak
    to: 'on'
    id: office_sink
    for:
      seconds: 5
  - trigger: state
    entity_id: binary_sensor.water_leak_sensor_kitchen_sink_water_leak
    to: 'on'
    id: kitchen_sink
    for:
      seconds: 5
  - trigger: state
    entity_id: binary_sensor.water_leak_laundry_machine_water_leak
    to: 'on'
    id: laundry_machine
    for:
      seconds: 5
  conditions: []
  actions:
  - variables:
      location: '{% if trigger.id == ''kitchen_sink'' %}Kitchen {% elif trigger.id
        == ''shower_sink'' %}Shower Room {% elif trigger.id == ''office_sink'' %}Office
        Bathroom/Shower Room {% elif trigger.id == ''laundry_machine'' %}Boiler/Laundry
        Machine Area {% endif %}'
  - choose:
    - conditions:
      - condition: trigger
        id: kitchen_sink
      - condition: state
        entity_id: input_select.dish_washer_status
        state: 'on'
      sequence:
      - action: switch.turn_off
        target:
          entity_id: switch.dish_washer
    - conditions:
      - condition: trigger
        id: laundry_machine
      - condition: state
        entity_id: input_select.washing_machine_status
        state: 'On'
      sequence:
      - action: switch.turn_off
        target:
          entity_id: switch.laundry_machine
  - action: notify.notify
    data:
      title: "\U0001F6A8 Water Leak Alert"
      message: ⚠️ Water Leak detected in {{ location }} at {{ now().strftime('%H:%M:%S')
        }}  {% if trigger.id == 'kitchen_sink' and is_state('input_select.dish_washer_status',
        'on') %} - Dishwasher power off {% elif trigger.id == 'laundry_machine' and
        is_state('input_select.washing_machine_status', 'On') %} - Laundry machine
        power off {% endif %} ⚠️
  - action: notify.home_assistant_group
    data:
      title: "\U0001F6A8 Water Leak Alert"
      message: ⚠️ Water Leak detected in {{ location }} at {{ now().strftime('%H:%M:%S')
        }}  {% if trigger.id == 'kitchen_sink' and is_state('input_select.dish_washer_status',
        'on') %} - Dishwasher power off {% elif trigger.id == 'laundry_machine' and
        is_state('input_select.washing_machine_status', 'On') %} - Laundry machine
        power off {% endif %} ⚠️
  mode: single
- id: '1709561304330'
  alias: Robot Vacuum Daily Routine
  description: 'Will start to vacuum home if zone.home is empty for more than 90 minutes.

    Will run only once a day'
  triggers:
  - entity_id:
    - zone.home
    for:
      hours: 1
      minutes: 20
      seconds: 0
    below: 1
    trigger: numeric_state
  conditions:
  - condition: template
    value_template: '{{ (states(''sensor.s8_pro_ultra_last_clean_start'') | as_datetime(as_datetime(0))
      | as_local).date() != now().date() }}'
  - condition: time
    after: 08:00:00
  - condition: state
    entity_id: vacuum.s8_pro_ultra
    state: docked
  actions:
  - target:
      entity_id: vacuum.s8_pro_ultra
    data: {}
    action: vacuum.start
  - metadata: {}
    data:
      message: "\U0001F916 Automation - Robot Vacuum Daily Routine \U0001F9FC"
    action: notify.supervisor_telegram
  mode: single
- id: '1709821554566'
  alias: Robot Vacuum 3 Days Without cleaning Actionable Notification
  description: ''
  triggers:
  - at: '12:00:00'
    trigger: time
  conditions:
  - condition: template
    value_template: '{{ now() - states(''sensor.s8_pro_ultra_last_clean_start'') |
      as_datetime | as_local > timedelta(days=3) }}'
  actions:
  - alias: Set up variables for the actions
    variables:
      action_keep: '{{ ''OPEN_'' ~ context.id }}'
      action_stop: '{{ ''CLOSE_'' ~ context.id }}'
  - alias: Ask to clean or not the House via Roborock S8 Vacuum
    data:
      message: House is dirty for 3 days. Do you want him to clean now?
      data:
        actions:
        - action: '{{ action_keep }}'
          title: Clean House
        - action: '{{ action_stop }}'
          title: Do not clean
    action: notify.mobile_app_ofir_honor_magic_5_pro
  - alias: Wait for a response
    wait_for_trigger:
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_keep }}'
      trigger: event
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_stop }}'
      trigger: event
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_stop }}'
      sequence:
      - data:
          message: You chose to NOT clean the house, shame on you.
        action: notify.mobile_app_ofir_honor_magic_5_pro
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_keep }}'
      sequence:
      - target:
          entity_id: vacuum.s8_pro_ultra
        data: {}
        action: vacuum.start
      - data:
          message: You chose to clean the house, well done!
        action: notify.mobile_app_ofir_honor_magic_5_pro
  mode: single
- id: '1710137624869'
  alias: Fish Fed Telegram Notification
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.office_fish_feeder_contact
    from: 'off'
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      filename: /config/www/tmp/snapshot_aquarium_sub.jpg
    target:
      entity_id: camera.aquarium_sub
    action: camera.snapshot
  - delay:
      hours: 0
      minutes: 0
      seconds: 2
  - data:
      authentication: digest
      file: /config/www/tmp/snapshot_aquarium_sub.jpg
      caption: "\U0001F41F The fishes have been fed"
    action: telegram_bot.send_photo
  mode: single
- id: '1710393879091'
  alias: Door Open Notification to Telegram
  description: If state changed to `Open` send photo of Main Door Camera and Telegram
    Message of Door being Open.
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.main_door_combined
    to: 'on'
  conditions:
  - condition: state
    entity_id: input_boolean.door_open_cooldown
    state: 'off'
  actions:
  - action: input_boolean.turn_on
    target:
      entity_id: input_boolean.door_open_cooldown
    data: {}
  - action: light.turn_on
    target:
      entity_id: light.kitchen_l2
    data: {}
  - delay:
      seconds: 1
  - action: camera.snapshot
    target:
      entity_id: camera.dining_table_sub
    data:
      filename: /config/www/tmp/snapshot_living_room_sub.jpg
  - action: telegram_bot.send_photo
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_living_room_sub.jpg
      caption: "\U0001F916 Automation - \U0001F6AA Main Door is open now!"
  - action: notify.bedroom_tv
    data:
      data:
        duration: 10
        position: top-left
        fontsize: medium
        transparency: 50%
        timeout: 10
        color: cyan
        interrupt: 0
        image:
          path: /config/www/tmp/snapshot_living_room_sub.jpg
      message: "\U0001F916 Automation - \U0001F6AA Main Door is open now!"
  - delay:
      seconds: 26
  - action: input_boolean.turn_off
    target:
      entity_id: input_boolean.door_open_cooldown
    data: {}
  mode: single
  max_exceeded: silent
- id: '1710394310075'
  alias: Door Closed Notification to Telegram
  description: If state changed to `Closed` send Telegram Message of Door being Closed
    and turn off the light after 25 seconds, with a 30-second cooldown.
  triggers:
  - trigger: state
    entity_id: binary_sensor.main_door_combined
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 0
  conditions:
  - condition: not
    conditions:
    - condition: state
      entity_id: binary_sensor.main_door_combined
      state:
      - unknown
      - unavailable
      for:
        hours: 0
        minutes: 0
        seconds: 0
  actions:
  - action: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - \U0001F6AA Main Door is closed now!"
  - delay:
      hours: 0
      minutes: 0
      seconds: 25
  - action: light.turn_off
    target:
      entity_id:
      - light.kitchen_l2
    data: {}
  mode: single
  max_exceeded: silent
- id: '1710448585060'
  alias: Office - Presence Turn On Lights
  description: When Presence detected in Office, if lights off and Roborock is docked
    then turn on the lights in the room.
  triggers:
  - entity_id:
    - binary_sensor.office_presence_sensor_presence
    to: 'on'
    trigger: state
  conditions:
  - condition: state
    entity_id: light.office
    state: 'off'
  - condition: time
    after: 08:20:00
    before: '23:00:00'
  - condition: or
    conditions:
    - condition: state
      entity_id: vacuum.s8_pro_ultra
      state: docked
      attribute: state
    - condition: state
      entity_id: vacuum.s8_pro_ultra
      state: unavailable
    - condition: state
      entity_id: vacuum.s8_pro_ultra
      state: idle
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  actions:
  - data:
      rgb_color:
      - 115
      - 185
      - 231
    target:
      entity_id:
      - light.office
    action: light.turn_on
  - if:
    - condition: state
      entity_id: input_select.office_corner_led_light_status
      state: 'off'
    then:
    - metadata: {}
      data:
        num_repeats: 1
        delay_secs: 0.4
        hold_secs: 0
        device: Corner_RGB_Lamp
        command: Power
      target:
        device_id: 213c1e28be789af24d278bfa20f54941
      action: remote.send_command
    alias: if corner light is off, turn on
  - alias: if desk led light is off, turn on
    if:
    - condition: state
      entity_id: light.ofir_desk_led
      state: 'off'
    then:
    - action: light.turn_on
      target:
        entity_id: light.ofir_desk_led
      data:
        rgb_color:
        - 24
        - 225
        - 251
  - metadata: {}
    data:
      message: "\U0001F916 Automation - Office - Presence Turn On Lights \U0001F4A1"
    action: notify.supervisor_telegram
  mode: single
- id: '1710659124035'
  alias: Shower - Boiler before & after Work
  description: Turn on the Boiler at 6:15 AM on Sunday, Monday, Tuesday, Wednesday,
    and Thursday for 35 minutes.
  triggers:
  - at: 05:50:00
    id: Morning
    enabled: true
    trigger: time
  - trigger: zone
    entity_id: device_tracker.ofir_honor_magic_5_pro
    zone: zone.ofir_afterwork
    event: leave
    id: AfterWork
  - trigger: zone
    entity_id: device_tracker.ofir_honor_magic_5_pro
    zone: zone.ofir_afterwork_sharonim
    event: leave
    id: AfterWork2
  - trigger: state
    entity_id:
    - sensor.ofir_honor_magic_5_pro_wifi_connection_2
    for:
      hours: 0
      minutes: 0
      seconds: 0
    to: AutoKit8D
    enabled: false
  conditions:
  - condition: state
    entity_id: switch.boiler
    state: 'off'
  actions:
  - alias: AFTER WORK OFIR
    if:
    - condition: trigger
      id:
      - AfterWork
      - AfterWork2
    - condition: not
      conditions:
      - condition: zone
        entity_id: device_tracker.ofir_honor_magic_5_pro
        zone: zone.ofir_work
      alias: Confirm Ofir not in AU10TIX Zone
    - condition: time
      after: '14:30:00'
      before: '17:30:00'
      weekday:
      - sun
      - mon
      - tue
      - thu
    - condition: state
      entity_id: sensor.ofir_honor_magic_5_pro_wifi_connection_2
      state: AutoKit8D
    then:
    - metadata: {}
      data:
        message: "\U0001F916 Automation - ♨️ Shower Water after Work has been activated!"
      action: notify.supervisor_telegram
      enabled: false
    - action: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ♨️ Boiler Activated! - \U0001F552 Time:
          {{ now().strftime('%H:%M') }} - \U0001F525 Duration: {% if trigger.id ==
          'Morning' %} 35 min {% else %} 45 min {% endif %} - \U0001F464 Triggered
          by: {% if trigger.id == 'Morning' %} Morning Routine {% else %} Returning
          from Work {% endif %}\n"
    - action: script.turn_on_boiler_for_45_minutes
      data: {}
  - alias: BEFORE WORK
    if:
    - condition: trigger
      id:
      - Morning
    - condition: numeric_state
      entity_id: zone.home
      above: 0
    then:
    - metadata: {}
      data:
        message: "\U0001F916 Automation - ♨️ Hot Water before Work has been activated!"
      action: notify.supervisor_telegram
      enabled: false
    - action: notify.supervisor_telegram
      metadata: {}
      data:
        message: "\U0001F916 Automation - ♨️ Boiler Activated! - \U0001F552 Time:
          {{ now().strftime('%H:%M') }} - \U0001F525 Duration: {% if trigger.id ==
          'Morning' %} 35 min {% else %} 45 min {% endif %} - \U0001F464 Triggered
          by: {% if trigger.id == 'Morning' %} Morning Routine {% else %} Returning
          from Work {% endif %}\n"
    - data: {}
      action: script.turn_on_boiler_for_35_minutes
  mode: single
- id: '1710659808604'
  alias: Kitchen - Presence Turn On Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.kitchen_presence_sensor_presence
    from: 'off'
    to: 'on'
    id: yes_presence
    trigger: state
  conditions:
  - condition: time
    after: 08:00:00
    before: '23:59:00'
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  - condition: or
    conditions:
    - condition: state
      entity_id: light.kitchen_l1
      state: 'off'
    - condition: state
      entity_id: switch.kitchen_led_strip
      state: 'off'
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: light.kitchen_l1
    action: light.turn_on
  - metadata: {}
    data: {}
    target:
      device_id: 92fdadf222970875f82e2d221e4612e4
    action: switch.turn_on
  - data:
      message: "\U0001F916 Automation -  \U0001F4A1Presence in Kitchen, turned the
        light on!"
    action: notify.supervisor_telegram
  mode: single
- id: '1710660367382'
  alias: Kitchen - No Presence Turn Off Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.kitchen_presence_sensor_presence
    from: 'on'
    to: 'off'
    for:
      hours: 0
      minutes: 30
      seconds: 0
    trigger: state
  - trigger: time
    at: 01:30:00
  conditions:
  - condition: state
    entity_id: light.kitchen_l1
    state: 'on'
  - condition: state
    entity_id: input_select.living_room_tv_status
    state: 'Off'
  actions:
  - target:
      entity_id:
      - light.kitchen_l1
    data: {}
    action: light.turn_off
  - target:
      device_id:
      - 92fdadf222970875f82e2d221e4612e4
    data: {}
    action: switch.turn_off
  - data:
      message: "\U0001F916 Automation -  \U0001F4A1No Presence in Kitchen, turned
        the light off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1710661044589'
  alias: Office Bathroom - Presence Turn On Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.office_bathroom_motion_sensor_occupancy
    to: 'on'
    id: motion_in_bathroom
    trigger: state
  conditions:
  - condition: state
    entity_id: light.office_bathroom
    state: 'off'
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: light.office_bathroom
    action: light.turn_on
  - data:
      message: "\U0001F916 Automation - Office Bathroom Motion Light"
    action: notify.supervisor_telegram
  mode: single
- id: '1710661192583'
  alias: Office Bathroom - No Presence Turn Off Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.office_bathroom_motion_sensor_occupancy
    to: 'off'
    id: no_motion_in_bathroom
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    trigger: state
  conditions:
  - condition: state
    entity_id: light.office_bathroom
    state: 'on'
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: light.office_bathroom
    action: light.turn_off
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 No Presence at Office Bathroom
        - Lights off \U0001F4DD\U0001F9FB"
    action: notify.supervisor_telegram
  mode: single
- id: '1710708901407'
  alias: Office - No Presence Turn Off Lights/TV/AC
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.office_presence_sensor_presence
    to: 'off'
    for:
      hours: 0
      minutes: 25
      seconds: 0
    id: presence_away_25_mins
    trigger: state
  conditions: []
  actions:
  - alias: Turn Off AC
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - presence_away_25_mins
      - condition: state
        entity_id: input_select.office_ac_status
        state: 'On'
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: climate.office
      action: climate.turn_off
    - metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at Office Room - Turn Off AC!"
      action: notify.supervisor_telegram
  - alias: Turn Off TV
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - presence_away_25_mins
      - condition: state
        entity_id: input_select.office_tv_status
        state: 'On'
        for:
          hours: 0
          minutes: 5
          seconds: 0
    then:
    - metadata: {}
      data: {}
      action: script.tv_power_office
    - metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at Office Room - Turn Off TV!"
      action: notify.supervisor_telegram
  - alias: Turn Off Lights
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - presence_away_25_mins
      - condition: or
        conditions:
        - condition: state
          entity_id: light.office
          state: 'on'
        - condition: state
          entity_id: light.office_wall_light
          state: 'on'
        - condition: state
          entity_id: light.office_bathroom
          state: 'on'
        - condition: state
          entity_id: input_select.office_corner_led_light_status
          state: 'on'
        - condition: state
          entity_id: light.ofir_desk_led
          state: 'on'
    then:
    - data: {}
      target:
        entity_id:
        - light.office
        - light.office_wall_light
        - light.office_bathroom
        - light.ofir_desk_led
      action: light.turn_off
    - if:
      - condition: state
        entity_id: input_select.office_corner_led_light_status
        state: 'on'
      then:
      - metadata: {}
        data:
          num_repeats: 1
          delay_secs: 0.4
          hold_secs: 0
          device: Corner_RGB_Lamp
          command: Power
        target:
          device_id: 213c1e28be789af24d278bfa20f54941
        action: remote.send_command
      alias: If corner light is on, turn off
    - metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at Office - Lights off"
      action: notify.supervisor_telegram
  mode: single
- id: '1710709437729'
  alias: Office - Blink Light Alert with Timeout
  description: Blinks wall light red when door opens (via multiple sensors) or purple
    when Elian arrives,  with cooldown, state restoration, and turns off wall light
    if on for 3 minutes.
  triggers:
  - trigger: state
    entity_id: binary_sensor.main_door_sensor_contact
    from: 'off'
    to: 'on'
    id: door_opened_main
  - trigger: state
    entity_id: binary_sensor.front_door_door_2
    from: 'off'
    to: 'on'
    id: door_opened_front_2
  - trigger: state
    entity_id: binary_sensor.front_door_door
    from: 'off'
    to: 'on'
    id: door_opened_front
  - trigger: state
    entity_id: device_tracker.elians_iphone
    from: not_home
    to: home
    id: elian_arrived
    for:
      hours: 0
      minutes: 0
      seconds: 45
  - trigger: state
    entity_id: light.office_wall_light
    to: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    id: wall_light_timeout
  conditions:
  - condition: or
    conditions:
    - condition: and
      conditions:
      - condition: time
        after: '16:15:00'
        before: 01:30:00
      - condition: state
        entity_id: binary_sensor.office_presence_sensor_presence
        state: 'on'
        for:
          seconds: 10
        alias: Confirm stable office presence
      - condition: state
        entity_id: light.office
        state: 'on'
        alias: Office light must be on
      - condition: state
        entity_id: automation.office_blink_red_light
        state: 'on'
        for:
          minutes: 5
        alias: Cooldown check
    - condition: template
      value_template: '{{ trigger.id == ''wall_light_timeout'' }}'
  actions:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: template
          value_template: '{{ trigger.id in [''door_opened_main'', ''door_opened_front_2'',
            ''door_opened_front''] }}'
        - condition: template
          value_template: '{{ trigger.id == ''elian_arrived'' }}'
      sequence:
      - action: scene.create
        data:
          scene_id: office_lights_snapshot
          snapshot_entities:
          - light.office_wall_light
          - light.ofir_desk_led
      - repeat:
          count: 5
          sequence:
          - action: light.turn_on
            target:
              entity_id: light.office_wall_light
            data:
              color_name: '{% if trigger.id in [''door_opened_main'', ''door_opened_front_2'',
                ''door_opened_front''] %} red {% else %} purple {% endif %}'
          - delay:
              milliseconds: 350
          - action: light.turn_off
            target:
              entity_id: light.office_wall_light
            data: {}
          - delay:
              milliseconds: 350
      - action: scene.turn_on
        target:
          entity_id: scene.office_lights_snapshot
        data: {}
      - delay:
          seconds: 1
      - choose:
        - conditions: []
          sequence:
          - action: light.turn_on
            target:
              entity_id: light.ofir_desk_led
            data:
              rgb_color:
              - 86
              - 241
              - 255
              brightness: 128
          - action: notify.supervisor_telegram
            data:
              message: "\U0001F916 Ofir Desk LED color set to RGB(86, 241, 255) at
                {{ now().strftime('%H:%M:%S') }}"
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Blink Office Light triggered at {{ now().strftime('%H:%M:%S')
            }} by   {% if trigger.id in ['door_opened_main', 'door_opened_front_2',
            'door_opened_front'] %}\n  Main Door opening (Red)\n{% elif trigger.id
            == 'elian_arrived' %}\n  Elian arriving home (Purple)\n{% endif %}"
    - conditions:
      - condition: template
        value_template: '{{ trigger.id == ''wall_light_timeout'' }}'
      sequence:
      - action: light.turn_off
        target:
          entity_id: light.office_wall_light
        data: {}
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Office Wall Light off after 3 minutes
            \U0001F4A1"
  mode: single
- id: '1710843500416'
  alias: Robot Vacuum Dock Error Notifications
  description: Notify on S8 Pro Ultra error states with priority levels
  triggers:
  - trigger: state
    entity_id: sensor.s8_pro_ultra_current_error
    not_from:
    - unknown
    - unavailable
    to:
    - robot_trapped
    - main_brush_jammed
    - water_empty
    - waste_water_tank_full
    id: vacuum_error
  conditions: []
  actions:
  - action: notify.supervisor_telegram
    data:
      message: "\U0001F916 Automation - {{ error_message }} ⚠️"
  - if:
    - condition: template
      value_template: '{{ is_urgent }}'
    then:
    - action: camera.snapshot
      target:
        entity_id: camera.s8_pro_ultra_map
      data:
        filename: /config/www/tmp/snapshot_vacuum.jpg
    - action: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - {{ error_message }} in {{ current_room }}!
          \U0001F6A8"
    - action: telegram_bot.send_photo
      data:
        authentication: digest
        target: -804542874
        file: /config/www/tmp/snapshot_vacuum.jpg
        caption: "\U0001F9F9 \U0001F916 Automation - {{ error_message }} in {{ current_room
          }}! \U0001F6A8"
  - if:
    - condition: template
      value_template: '{{ not is_urgent }}'
    then:
    - action: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - {{ error_message }} ⚠️"
  mode: single
  variables:
    error_type: '{{ trigger.to_state.state }}'
    error_message: '{% if error_type == ''robot_trapped'' %} Robot Vacuum is trapped
      or stuck {% elif error_type == ''main_brush_jammed'' %} Robot Vacuum main brush
      is jammed {% elif error_type == ''water_empty'' %} Robot Vacuum water tank is
      empty {% elif error_type == ''waste_water_tank_full'' %} Robot Vacuum waste
      water tank is full {% else %} Unknown error {% endif %}

      '
    current_room: '{{ states(''sensor.s8_pro_ultra_current_room'') }}'
    is_urgent: '{{ error_type in [''robot_trapped'', ''main_brush_jammed''] }}'
- id: '1712566163441'
  alias: Bedroom - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.bedroom
    from: 'off'
    to: 'on'
    id: light_to_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is on in Bedroom \U0001F6CF️"
    action: notify.supervisor_telegram
  mode: single
- id: '1712566214263'
  alias: Bedroom - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.bedroom
    from: 'on'
    to: 'off'
    id: light_to_off
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is off in Bedroom \U0001F6CF️"
    action: notify.supervisor_telegram
  mode: single
- id: '1712566392981'
  alias: Bedroom - TV On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.bedroom_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 9
    above: 5
    id: tv_is_on
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.bedroom_tv_status
    state: 'Off'
  actions:
  - data:
      option: 'On'
    target:
      entity_id: input_select.bedroom_tv_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Bedroom TV \U0001F4FA Status has been changed
        to On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712566461524'
  alias: Bedroom - TV Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.bedroom_tv_power
    for:
      hours: 0
      minutes: 4
      seconds: 45
    id: tv_is_off
    below: 4
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.bedroom_tv_status
    state: 'On'
  actions:
  - data:
      option: 'Off'
    target:
      entity_id: input_select.bedroom_tv_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Bedroom TV \U0001F4FA Status has been changed
        to Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712566856662'
  alias: Bedroom - Door Closed Notification to Telegram
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.bedroom_door_sensor_contact
    to: 'off'
    from: 'on'
    id: door_closed
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F6AA Bedroom Door is closed now!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712566913587'
  alias: Bedroom - Door Open Notification to Telegram
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.bedroom_door_sensor_contact
    to: 'on'
    from: 'off'
    id: door_open
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F6AA Bedroom Door is open now!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712573476770'
  alias: Wardrobe - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.wardrobe
    from: 'off'
    to: 'on'
    id: light_to_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is on in Wardrobe\U0001F457"
    action: notify.supervisor_telegram
  mode: single
- id: '1712573546014'
  alias: Wardrobe - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.wardrobe
    from: 'on'
    to: 'off'
    id: light_to_off
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is off in Wardrobe\U0001F457"
    action: notify.supervisor_telegram
  mode: single
- id: '1712574828792'
  alias: Wardrobe - Sticker Button
  description: Hold - Clean Room
  triggers:
  - entity_id:
    - sensor.wardrobe_sticker_switch_button_action
    to: hold
    id: sticker_hold_press
    trigger: state
  conditions: []
  actions:
  - data:
      command: app_segment_clean
      params:
      - segments:
        - 17
        repeat: 2
    target:
      entity_id: vacuum.s8_pro_ultra
    action: vacuum.send_command
  - metadata: {}
    data:
      message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Wardrobe
        room!"
    action: notify.home_assistant_group
  mode: single
- id: '1712574926149'
  alias: Wardrobe - Wireless Remote
  description: '1. Toggle AC - Button 1 Wireless Remote

    2. Add +1 Degree to AC - Button 2 Wireless Remote

    3. -1 Degree to AC - Button 3 Wireless Remote'
  triggers:
  - trigger: state
    entity_id:
    - sensor.wardrobe_wireless_remote_switch_action
    to:
    - 1_single
    - 2_single
    - 3_single
    id: button_press
  actions:
  - if:
    - condition: template
      value_template: '{{ button_action == ''1_single'' }}'
    then:
    - if:
      - condition: state
        entity_id: input_select.wardrobe_ac_status
        state: 'On'
      then:
      - action: climate.turn_off
        target:
          entity_id: climate.wardrobe
      else:
      - action: climate.turn_on
        target:
          entity_id: climate.wardrobe
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote ❄️ Wardrobe AC power toggled"
  - if:
    - condition: template
      value_template: '{{ button_action == ''2_single'' }}'
    then:
    - action: climate.set_temperature
      target:
        entity_id: climate.wardrobe
      data:
        temperature: '{{ (state_attr(''climate.wardrobe'', ''temperature'') | float(22))
          + 1 }}'
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote ❄️ Wardrobe AC temperature
          increased to {{ state_attr('climate.wardrobe', 'temperature') + 1 }}°C"
  - if:
    - condition: template
      value_template: '{{ button_action == ''3_single'' }}'
    then:
    - action: climate.set_temperature
      target:
        entity_id: climate.wardrobe
      data:
        temperature: '{{ (state_attr(''climate.wardrobe'', ''temperature'') | float(22))
          - 1 }}'
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote ❄️ Wardrobe AC temperature
          decreased to {{ state_attr('climate.wardrobe', 'temperature') - 1 }}°C"
  mode: single
  variables:
    button_action: '{{ trigger.to_state.state }}'
- id: '1712575052950'
  alias: Bedroom - Wireless Remote
  description: '1. Wireless Remote - 1st button AC Power toggle

    2. Wireless Remote - 2nd button AC + Temperature

    3. Wireless Remote - 3rd button AC - Temperature

    4. Wireless Remote - 4th button Toggle TV

    5. Wireless Remote - 1st button Hold - Light toggle

    6. Wireless Remote - 4th button hold - ALL LIGHTS OFF'
  triggers:
  - trigger: state
    entity_id:
    - sensor.bedroom_wireless_remote_switch_action
    - sensor.bedroom_second_wireless_remote_ac_action
    to:
    - 1_single
    - 2_single
    - 3_single
    - 4_single
    - 1_double
    - 4_hold
    id: button_press
  actions:
  - if:
    - condition: template
      value_template: '{{ button_action == ''1_single'' }}'
    then:
    - action: script.toggle_bedroom_ac
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote ❄️ Bedroom AC power toggled"
  - if:
    - condition: template
      value_template: '{{ button_action == ''2_single'' }}'
    then:
    - action: climate.set_temperature
      target:
        entity_id: climate.bedroom_ac
      data:
        temperature: '{{ (state_attr(''climate.bedroom_ac'', ''temperature'') | float(22))
          + 1 }}'
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote ❄️ Bedroom AC temperature
          increased to {{ state_attr('climate.bedroom_ac', 'temperature') + 1 }}°C"
  - if:
    - condition: template
      value_template: '{{ button_action == ''3_single'' }}'
    then:
    - action: climate.set_temperature
      target:
        entity_id: climate.bedroom_ac
      data:
        temperature: '{{ (state_attr(''climate.bedroom_ac'', ''temperature'') | float(22))
          - 1 }}'
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote ❄️ Bedroom AC temperature
          decreased to {{ state_attr('climate.bedroom_ac', 'temperature') - 1 }}°C"
  - if:
    - condition: template
      value_template: '{{ button_action == ''4_single'' }}'
    then:
    - action: script.ir_turn_on_off_bedroom_tv
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote \U0001F4FA Bedroom TV power
          toggled"
  - if:
    - condition: template
      value_template: '{{ button_action == ''1_double'' }}'
    then:
    - action: light.toggle
      target:
        entity_id: light.bedroom
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote \U0001F4A1 Bedroom light
          is {{ 'on' if is_state('light.bedroom', 'off') else 'off' }}"
  - if:
    - condition: template
      value_template: '{{ button_action == ''4_hold'' }}'
    then:
    - action: script.turn_all_lights_off
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote \U0001F4A1 All lights turned
          off"
  mode: single
  variables:
    button_action: '{{ trigger.to_state.state }}'
    remote_sensor: '{{ trigger.entity_id }}'
- id: '1712575201276'
  alias: Office - TV On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.office_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 8
    above: 12
    id: tv_on
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.office_tv_status
    state: 'Off'
  actions:
  - metadata: {}
    data:
      option: 'On'
    target:
      entity_id:
      - input_select.office_tv_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Office TV \U0001F4FA Status has been changed
        to On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712575265404'
  alias: Office - TV Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.office_tv_power
    for:
      hours: 0
      minutes: 4
      seconds: 30
    id: tv_off
    below: 11
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.office_tv_status
    state: 'On'
  actions:
  - metadata: {}
    data:
      option: 'Off'
    target:
      entity_id:
      - input_select.office_tv_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Office TV \U0001F4FA Status has been changed
        to Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712575417042'
  alias: Office - Sticker Button
  description: 'Hold - AC Toggle

    Single Press - TV Toggle'
  triggers:
  - entity_id:
    - sensor.office_desk_button_action
    to: single
    id: office_desk_button_1singlePress
    trigger: state
  - entity_id:
    - sensor.office_desk_button_action
    to: hold
    id: office_desk_button_1holdPress
    trigger: state
  conditions: []
  actions:
  - alias: Single Press
    if:
    - condition: trigger
      id:
      - office_desk_button_1singlePress
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: script.tv_power_office
      action: script.turn_on
    - data:
        message: "\U0001F916 Automation - Office Sticker Button TV Toggle \U0001F4FA"
      action: notify.supervisor_telegram
  - alias: Hold
    if:
    - condition: trigger
      id:
      - office_desk_button_1holdPress
    then:
    - metadata: {}
      data: {}
      action: script.toggle_office_ac
    - data:
        message: "\U0001F916 Automation - Office Sticker Button AC Toggle ❄️"
      action: notify.supervisor_telegram
  mode: single
- id: '1712575667741'
  alias: Office - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.office
    to: 'on'
    id: office_light_on
    from: 'off'
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is on in Office \U0001F4DD"
    action: notify.supervisor_telegram
  mode: single
- id: '1712575731321'
  alias: Office - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.office
    to: 'off'
    id: office_light_off
    from: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is off in Office \U0001F4DD"
    action: notify.supervisor_telegram
  mode: single
- id: '1712575875113'
  alias: Office Bathroom - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.office_bathroom
    to: 'on'
    id: office_bathroom_light_on
    from: 'off'
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is on in Office Bathroom
        \U0001F4DD\U0001F9FB"
    action: notify.supervisor_telegram
  mode: single
- id: '1712575923537'
  alias: Office Bathroom - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.office_bathroom
    to: 'off'
    id: office_bathroom_light_off
    from: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is off in Office Bathroom
        \U0001F4DD\U0001F9FB"
    action: notify.supervisor_telegram
  mode: single
- id: '1712576829572'
  alias: Shower - Turn Off Heater After 35 Minutes
  description: ''
  triggers:
  - entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 35
      seconds: 0
    above: 250
    id: heater
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: switch.heater_shower
    state: 'on'
  actions:
  - metadata: {}
    data: {}
    target:
      device_id: 699c416a4aefdc84921eb1f8e72b4cad
    action: switch.turn_off
  - data:
      message: "\U0001F916 Automation - Heater was left on for 35 minutes, Turned
        OFF! ♨️"
    action: notify.supervisor_telegram
  mode: single
- id: '1712576962785'
  alias: Shower - Turn Boiler off after 1 hour and 20 minutes
  description: ''
  triggers:
  - entity_id:
    - switch.boiler
    to: 'on'
    for:
      hours: 1
      minutes: 20
      seconds: 0
    id: boiler_on_for_1_hour_20_minutes
    trigger: state
  conditions: []
  actions:
  - action: switch.turn_off
    target:
      entity_id: switch.boiler
  - data:
      message: "\U0001F916 Automation - Turn Boiler off after 1 hour and 20 minutes
        \U0001F6BF"
    action: notify.supervisor_telegram
  mode: restart
- id: '1712577097928'
  alias: Shower - Heater On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 0
      seconds: 10
    above: 250
    id: heater_power_on
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.shower_heater_status
    state: 'off'
  actions:
  - target:
      entity_id: input_select.shower_heater_status
    data:
      option: 'on'
    action: input_select.select_option
  - metadata: {}
    data:
      message: "\U0001F916 Automation - ♨️ Shower Heater Status has been changed to
        On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712577171484'
  alias: Shower - Heater Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.heater_shower_power
    for:
      hours: 0
      minutes: 0
      seconds: 10
    id: heater_power_off
    below: 15
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.shower_heater_status
    state: 'on'
  actions:
  - target:
      entity_id: input_select.shower_heater_status
    data:
      option: 'off'
    action: input_select.select_option
  - metadata: {}
    data:
      message: "\U0001F916 Automation - ♨️ Shower Heater Status has been changed to
        Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712577470339'
  alias: Shower - Boiler On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.boiler_power
    for:
      hours: 0
      minutes: 0
      seconds: 3
    above: 5
    id: Boiler_On_Notification
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.switcher_boiler_status
    state: 'Off'
  actions:
  - target:
      entity_id:
      - input_select.switcher_boiler_status
    data:
      option: 'On'
    action: input_select.select_option
  - data:
      message: "\U0001F6BF Boiler has been turned ON!"
    action: notify.home_assistant_group
  - metadata: {}
    data:
      message: "\U0001F6BF Boiler has been turned ON!"
    action: notify.mobile_app_elians_iphone
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: "\U0001F4A6\U0001F4A6 Boiler is ON \U0001F4A6\U0001F4A6"
  - if:
    - condition: state
      entity_id: input_select.bedroom_tv_status
      state: 'On'
    then:
    - action: notify.bedroom_tv
      data:
        data:
          duration: 10
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 10
          color: cyan
          interrupt: 0
        message: "\U0001F4A6\U0001F4A6 Boiler is ON \U0001F4A6\U0001F4A6"
  mode: single
- id: '1712577543414'
  alias: Shower - Boiler Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.boiler_power
    for:
      hours: 0
      minutes: 0
      seconds: 15
    id: Boiler_Off_Notification
    below: 5
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.switcher_boiler_status
    state: 'On'
  actions:
  - target:
      entity_id:
      - input_select.switcher_boiler_status
    data:
      option: 'Off'
    action: input_select.select_option
  - data:
      message: "\U0001F6BF Boiler has been turned OFF!"
    action: notify.home_assistant_group
  - metadata: {}
    data:
      message: "\U0001F6BF Boiler has been turned OFF!"
    action: notify.mobile_app_elians_iphone
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: "\U0001F4A6\U0001F4A6 Boiler is OFF \U0001F4A6\U0001F4A6"
  - if:
    - condition: state
      entity_id: input_select.bedroom_tv_status
      state: 'On'
    then:
    - action: notify.bedroom_tv
      data:
        data:
          duration: 10
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 10
          color: cyan
          interrupt: 0
        message: "\U0001F4A6\U0001F4A6 Boiler is OFF \U0001F4A6\U0001F4A6"
  mode: single
- id: '1712577596194'
  alias: Shower - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.shower_l1
    from: 'off'
    to: 'on'
    id: light_to_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is on in Shower \U0001F6C1"
    action: notify.supervisor_telegram
  mode: single
- id: '1712577634420'
  alias: Shower - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.shower_l1
    from: 'on'
    to: 'off'
    id: light_to_off
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is off in Shower \U0001F6C1"
    action: notify.supervisor_telegram
  mode: single
- id: '1712577833925'
  alias: Bathroom - No Presence Turn Off Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.bathroom_motion_sensor_occupancy
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 10
      seconds: 0
    id: no_motion
    trigger: state
  conditions:
  - condition: state
    state: 'on'
    entity_id: light.bathroom
  actions:
  - data: {}
    target:
      entity_id: light.bathroom
    action: light.turn_off
  - data:
      message: "\U0001F916 Automation - \U0001F6BD No Presence at Bathroom - Light
        off \U0001F4A1"
    action: notify.supervisor_telegram
  mode: single
- id: '1712577894202'
  alias: Bathroom - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.bathroom
    from: 'off'
    to: 'on'
    id: light_to_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is on in Bathroom \U0001F6BD"
    action: notify.supervisor_telegram
  mode: single
- id: '1712577929196'
  alias: Bathroom - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.bathroom
    from: 'on'
    to: 'off'
    id: light_to_off
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is off in Bathroom \U0001F6BD"
    action: notify.supervisor_telegram
  mode: single
- id: '1712578232201'
  alias: Living Room - TV On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.living_room_tv_power
    for:
      hours: 0
      minutes: 0
      seconds: 9
    id: tv_is_on
    above: 10
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.living_room_tv_status
    state: 'Off'
  actions:
  - metadata: {}
    data:
      option: 'On'
    target:
      entity_id: input_select.living_room_tv_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Living Room TV \U0001F4FA Status has been
        changed to On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712578296278'
  alias: Living Room - TV Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.living_room_tv_power
    for:
      hours: 0
      minutes: 10
      seconds: 40
    below: 5
    id: tv_is_off
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.living_room_tv_status
    state: 'On'
  actions:
  - metadata: {}
    data:
      option: 'Off'
    target:
      entity_id: input_select.living_room_tv_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Living Room TV \U0001F4FA Status has been
        changed to Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712578494539'
  alias: Living Room - Wireless Remote
  description: '1. AC Power button - 1_single

    2. Blinds Open - 2_single

    3. Blinds Close - 3_single

    4. Light toggle - 4_single'
  triggers:
  - trigger: state
    entity_id: sensor.living_room_wireless_remote_switch_action
    to:
    - 1_single
    - 2_single
    - 3_single
    - 4_single
    id: button_press
  conditions: []
  actions:
  - if:
    - condition: template
      value_template: '{{ button_action == ''1_single'' }}'
    then:
    - if:
      - condition: or
        conditions:
        - condition: state
          entity_id: climate.ofir_a_c
          state: cool
        - condition: state
          entity_id: climate.ofir_a_c
          state: heat
      then:
      - action: climate.turn_off
        target:
          entity_id: climate.ofir_a_c
      else:
      - action: climate.turn_on
        target:
          entity_id: climate.ofir_a_c
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote ❄️ Living Room AC power
          toggled"
  - if:
    - condition: template
      value_template: '{{ button_action == ''2_single'' }}'
    then:
    - action: script.living_room_blinds_open
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote \U0001FA9F Living Room blinds
          are opening"
  - if:
    - condition: template
      value_template: '{{ button_action == ''3_single'' }}'
    then:
    - action: script.living_room_blinds_close
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote \U0001FA9F Living Room blinds
          are closing"
  - if:
    - condition: template
      value_template: '{{ button_action == ''4_single'' }}'
    then:
    - action: light.toggle
      target:
        entity_id: light.living_room_l1
    - action: notify.supervisor_telegram
      data:
        message: "\U0001F916 Automation - Wireless remote \U0001F4A1 Living Room light
          is {{ 'on' if is_state('light.living_room_l1', 'off') else 'off' }}"
  mode: single
  variables:
    button_action: '{{ trigger.to_state.state }}'
- id: '1712578588954'
  alias: Living Room - No Presence Turn Off TV/AC/Light
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.living_room_presence_sensor_presence
    to: 'off'
    for:
      hours: 0
      minutes: 35
      seconds: 0
    id: no_move
    trigger: state
  conditions: []
  actions:
  - alias: Turn Off TV
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - no_move
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'On'
    then:
    - data: {}
      action: script.ir_turn_on_off_living_room_tv
    - data:
        message: "\U0001F916 Automation - \U0001F4FA No Presence on LR, Turn off TV!"
      action: notify.supervisor_telegram
  - alias: Turn Off AC
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - no_move
      - condition: or
        conditions:
        - condition: state
          entity_id: climate.ofir_a_c
          state: cool
        - condition: state
          entity_id: climate.ofir_a_c
          state: heat
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: climate.ofir_a_c
      action: climate.turn_off
    - metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at LR - Turn Off AC!"
      action: notify.supervisor_telegram
  - alias: Turn Off Light
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - no_move
      - condition: state
        entity_id: light.living_room_l1
        state: 'on'
    then:
    - action: light.turn_off
      target:
        entity_id: light.living_room_l1
      data: {}
    - metadata: {}
      data:
        message: "\U0001F916 Automation - No Presence at LR - Turn Off Light!"
      action: notify.supervisor_telegram
  mode: single
- id: '1712579458749'
  alias: Office - AC On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.office_ac_power
    for:
      hours: 0
      minutes: 0
      seconds: 15
    above: 5
    id: office_ac_on
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.office_ac_status
    state: 'Off'
  actions:
  - metadata: {}
    data:
      option: 'On'
    target:
      entity_id: input_select.office_ac_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Office AC ❄️ Status has been changed to On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712579520468'
  alias: Office - AC Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.office_ac_power
    for:
      hours: 0
      minutes: 4
      seconds: 40
    id: office_ac_off
    below: 4
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.office_ac_status
    state: 'On'
  actions:
  - metadata: {}
    data:
      option: 'Off'
    target:
      entity_id: input_select.office_ac_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Office AC ❄️ Status has been changed to Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712579593314'
  alias: Living Room - AC On Notification
  description: ''
  triggers:
  - entity_id:
    - climate.ofir_a_c
    to: cool
    id: ac_set_cool
    trigger: state
  - entity_id:
    - climate.ofir_a_c
    to: heat
    id: ac_set_heat
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - Living Room AC ❄️ Status has been changed
        to On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712579654763'
  alias: Living Room - AC Off Notification
  description: ''
  triggers:
  - entity_id:
    - climate.ofir_a_c
    to: 'off'
    id: ac_set_to_off
    not_from:
    - unknown
    - unavailable
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - Living Room AC ❄️ Status has been changed
        to Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712579754081'
  alias: Bedroom - AC On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.bedroom_ac_power
    for:
      hours: 0
      minutes: 0
      seconds: 20
    above: 5
    id: bedroom_ac_on
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.bedroom_ac_status
    state: 'Off'
  actions:
  - data:
      option: 'On'
    target:
      entity_id: input_select.bedroom_ac_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Bedroom AC ❄️ Status has been changed to On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712579850466'
  alias: Bedroom - AC Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.bedroom_ac_power
    for:
      hours: 0
      minutes: 4
      seconds: 47
    below: 4
    id: bedroom_ac_off
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.bedroom_ac_status
    state: 'On'
  actions:
  - data:
      option: 'Off'
    target:
      entity_id: input_select.bedroom_ac_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Bedroom AC ❄️ Status has been changed to Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712579911937'
  alias: Wardrobe - AC On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.wardrobe_ac_power
    for:
      hours: 0
      minutes: 0
      seconds: 15
    above: 5
    id: wardrobe_ac_on
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.wardrobe_ac_status
    state: 'Off'
  actions:
  - metadata: {}
    data:
      option: 'On'
    target:
      entity_id: input_select.wardrobe_ac_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Wardrobe AC ❄️ Status has been changed to
        On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712579980866'
  alias: Wardrobe - AC Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.wardrobe_ac_power
    for:
      hours: 0
      minutes: 4
      seconds: 40
    id: wardrobe_ac_off
    below: 4
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.wardrobe_ac_status
    state: 'On'
  actions:
  - metadata: {}
    data:
      option: 'Off'
    target:
      entity_id: input_select.wardrobe_ac_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - Wardrobe AC ❄️ Status has been changed to
        Off!"
    action: notify.supervisor_telegram
  mode: single
- id: '1712580428389'
  alias: Elian Location Tracking
  description: Tracks Elian's location changes and sends appropriate notifications
  triggers:
  - trigger: state
    entity_id: device_tracker.elians_iphone
    from: home
    to: not_home
    for:
      hours: 0
      minutes: 1
      seconds: 50
    id: elian_left_home
  - trigger: state
    entity_id: device_tracker.elians_iphone
    to: Mofit
    for:
      hours: 0
      minutes: 4
      seconds: 0
    id: elian_entered_mofit
  - trigger: device
    device_id: 611a494457823cb15ab854ae5b741ef0
    domain: device_tracker
    entity_id: 4d605a96e7d9ad764a8f357609e42ebd
    type: leaves
    zone: zone.mofit
    id: elian_leaving_mofit
  - trigger: zone
    entity_id: device_tracker.elians_iphone
    zone: zone.matrix
    event: enter
    id: elian_enter_work
  - trigger: zone
    entity_id: device_tracker.elians_iphone
    zone: zone.matrix
    event: leave
    id: elian_leaving_work
  - trigger: state
    entity_id: sensor.elians_iphone_ssid
    to: Mofit5
    id: elian_mofit_wifi
  conditions: []
  actions:
  - choose:
    - conditions:
      - condition: trigger
        id: elian_left_home
      sequence:
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has left the house."
    - conditions:
      - condition: or
        conditions:
        - condition: trigger
          id: elian_entered_mofit
        - condition: trigger
          id: elian_mofit_wifi
      sequence:
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has entered Mofit."
    - conditions:
      - condition: trigger
        id: elian_leaving_mofit
      - condition: state
        entity_id: sensor.elians_iphone_ssid
        state: Not Connected
      - condition: time
        after: 09:00:00
        before: '23:59:59'
      sequence:
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has left Mofit."
    - conditions:
      - condition: trigger
        id: elian_enter_work
      sequence:
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has entered Work."
    - conditions:
      - condition: trigger
        id: elian_leaving_work
      - condition: not
        conditions:
        - condition: state
          entity_id: sensor.elians_iphone_ssid
          state: Logica-it
      sequence:
      - action: notify.supervisor_telegram
        data:
          message: "\U0001F916 Automation - Elian has left Work."
    default: []
  mode: single
- id: '1712580944148'
  alias: Kitchen - Sticker Button
  description: 'Hold - Vacuum Kitchen

    Single Press - Light LED Toggle'
  triggers:
  - entity_id:
    - sensor.kitchen_sticker_switch_button_action
    to: single
    id: stickerbutton_single
    trigger: state
  - entity_id:
    - sensor.kitchen_sticker_switch_button_action
    to: hold
    id: stickerbutton_hold
    trigger: state
  conditions: []
  actions:
  - alias: Single Press
    if:
    - condition: trigger
      id:
      - stickerbutton_single
      enabled: true
    then:
    - metadata: {}
      data: {}
      target:
        entity_id: switch.kitchen_led_strip
      action: switch.toggle
    enabled: true
  - alias: Hold
    if:
    - condition: trigger
      id:
      - stickerbutton_hold
      enabled: true
    then:
    - data:
        command: app_segment_clean
        params:
        - segments:
          - 16
          repeat: 2
      target:
        entity_id: vacuum.s8_pro_ultra
      action: vacuum.send_command
    - metadata: {}
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Roborock S8 going to clean Kitchen!"
      action: notify.home_assistant_group
    enabled: true
  mode: single
- id: '1712835404165'
  alias: Robot Vacuum Status Notification
  description: Notify when S8 Pro Ultra starts and finishes cleaning
  triggers:
  - trigger: state
    entity_id: sensor.s8_pro_ultra_cleaning_progress
    not_from:
    - unknown
    - unavailable
    not_to:
    - unknown
    - unavailable
    id: vacuum_status_change
  actions:
  - if:
    - condition: template
      value_template: '{{ is_started }}'
    then:
    - action: notify.home_assistant_group
      data:
        message: "\U0001F916 Automation - \U0001F9F9 Robot Vacuum has started cleaning!"
  - if:
    - condition: template
      value_template: '{{ is_finished }}'
    then:
    - action: camera.snapshot
      target:
        entity_id: camera.s8_pro_ultra_map
      data:
        filename: /config/www/tmp/snapshot_vacuum.jpg
    - action: telegram_bot.send_photo
      data:
        authentication: digest
        target: '-804542874'
        file: /config/www/tmp/snapshot_vacuum.jpg
        caption: "\U0001F916 Automation - \U0001F9F9 Robot Vacuum finished! Took {{
          duration_minutes }} min, covered {{ area_cleaned }} m²."
    - action: telegram_bot.send_photo
      data:
        authentication: digest
        file: /config/www/tmp/snapshot_vacuum.jpg
        caption: "\U0001F916 Automation - \U0001F9F9 Robot Vacuum finished! Took {{
          duration_minutes }} min, covered {{ area_cleaned }} m²."
      enabled: false
  mode: single
  variables:
    progress: '{{ trigger.to_state.state }}'
    is_started: '{{ trigger.from_state.state == ''0'' and progress != ''0'' }}'
    is_finished: '{{ trigger.to_state.state == ''0'' }}'
    duration_minutes: '{{ (states(''sensor.s8_pro_ultra_last_clean_duration'') | int(0)
      / 60) | round(1, ''floor'') }}'
    area_cleaned: '{{ states(''sensor.s8_pro_ultra_current_clean_area'') | default(''N/A'')
      }}'
- id: '1712835545156'
  alias: Laundry Machine Status Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.laundry_machine_power
    for:
      hours: 0
      minutes: 0
      seconds: 3
    above: 25
    id: laundry_machine_set_on
    trigger: numeric_state
  - entity_id:
    - sensor.laundry_machine_power
    for:
      hours: 0
      minutes: 4
      seconds: 30
    id: laundry_machine_set_off
    below: 2
    trigger: numeric_state
  conditions: []
  actions:
  - alias: Laundry Machine started
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - laundry_machine_set_on
      - condition: state
        entity_id: input_select.washing_machine_status
        state: 'Off'
    then:
    - metadata: {}
      data:
        option: 'On'
      target:
        entity_id: input_select.washing_machine_status
      action: input_select.select_option
    - metadata: {}
      data:
        message: "\U0001F456 Laundry machine has started!"
      action: notify.home_assistant_group
  - alias: Laundry Machine finished
    if:
    - condition: and
      conditions:
      - condition: trigger
        id:
        - laundry_machine_set_off
      - condition: state
        entity_id: input_select.washing_machine_status
        state: 'On'
    then:
    - metadata: {}
      data:
        option: 'Off'
      target:
        entity_id: input_select.washing_machine_status
      action: input_select.select_option
    - metadata: {}
      data:
        message: "\U0001F456 Laundry machine has finished!"
      action: notify.home_assistant_group
    - metadata: {}
      data: {}
      target:
        entity_id: light.laundry_machine_light
      action: light.turn_on
    - metadata: {}
      data:
        message: "\U0001F456 Laundry machine has finished!"
      action: notify.mobile_app_elians_iphone
    - if:
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'On'
      then:
      - action: notify.living_room_lg_webos_smart_tv
        metadata: {}
        data:
          message: "\U0001F456 Laundry machine has finished! \U0001F456"
    - if:
      - condition: state
        entity_id: input_select.bedroom_tv_status
        state: 'On'
      then:
      - action: notify.bedroom_tv
        data:
          data:
            duration: 10
            position: top-left
            fontsize: medium
            transparency: 50%
            timeout: 10
            color: cyan
            interrupt: 0
          message: "\U0001F456 Laundry machine has finished! \U0001F456"
  mode: single
- id: '1712835629886'
  alias: Laundry Machine - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.laundry_machine_light
    from: 'off'
    to: 'on'
    id: laundry_light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Laundry Machine Light is on in
        Kitchen \U0001F52A"
    action: notify.supervisor_telegram
  mode: single
- id: '1712835681258'
  alias: Laundry Machine - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.laundry_machine_light
    from: 'on'
    to: 'off'
    id: laundry_light_set_off
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Laundry Machine Light is off in
        Kitchen \U0001F52A"
    action: notify.supervisor_telegram
  mode: single
- id: '1712836206340'
  alias: Kitchen - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.kitchen_l1
    from: 'off'
    to: 'on'
    id: light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is on in Kitchen\U0001F52A"
    action: notify.supervisor_telegram
  mode: single
- id: '1712836256038'
  alias: Kitchen - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.kitchen_l1
    from: 'on'
    to: 'off'
    id: light_set_off
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Light is off in Kitchen\U0001F52A"
    action: notify.supervisor_telegram
  mode: single
- id: '1712836579502'
  alias: Kitchen - LED Strip Light On Notification
  description: ''
  triggers:
  - entity_id:
    - switch.kitchen_led_strip
    from: 'off'
    to: 'on'
    id: light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 LED Strip Light is on in Kitchen\U0001F52A"
    action: notify.supervisor_telegram
  mode: single
- id: '1712836605539'
  alias: Kitchen - LED Strip Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - switch.kitchen_led_strip
    from: 'on'
    to: 'off'
    id: light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 LED Strip Light is off in Kitchen\U0001F52A"
    action: notify.supervisor_telegram
  mode: single
- id: '1713013073031'
  alias: Kitchen - Smoke Detected
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.kitchen_smoke_detector_smoke
    from: 'off'
    to: 'on'
    id: smoke_detected
    trigger: state
  conditions: []
  actions:
  - alias: Smoke alert
    if:
    - condition: trigger
      id:
      - smoke_detected
    then:
    - data:
        message: "\U0001F916 Automation - \U0001F6A8 Smoke Detected in Kitchen!"
      action: notify.supervisor_telegram
    - metadata: {}
      data:
        message: "\U0001F6A8SMOKE DETECTED IN KITCHEN \U0001F6A8"
      action: notify.notify
  mode: single
- id: '1713157342907'
  alias: Living Room - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.living_room_l1
    from: 'off'
    to: 'on'
    id: light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Living Room Light is on \U0001F6CB️"
    action: notify.supervisor_telegram
  mode: single
- id: '1713157388984'
  alias: Living Room - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.living_room_l1
    from: 'on'
    to: 'off'
    id: light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Living Room Light is off \U0001F6CB️"
    action: notify.supervisor_telegram
  mode: single
- id: '1713157489878'
  alias: Dining Table - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.living_room_l2
    from: 'off'
    to: 'on'
    id: light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Dining Table Light is on in Living
        Room \U0001F37D️"
    action: notify.supervisor_telegram
  mode: single
- id: '1713157519579'
  alias: Dining Table - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.living_room_l2
    from: 'on'
    to: 'off'
    id: light_set_on
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Dining Table Light is off in Living
        Room \U0001F37D️"
    action: notify.supervisor_telegram
  mode: single
- id: '1713157631342'
  alias: Main Door - Light On Notification
  description: ''
  triggers:
  - entity_id:
    - light.kitchen_l2
    from: 'off'
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Main Door Light is on \U0001F6AA"
    action: notify.supervisor_telegram
  mode: single
- id: '1713157657112'
  alias: Main Door - Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - light.kitchen_l2
    from: 'on'
    to: 'off'
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1 Main Door Light is off \U0001F6AA"
    action: notify.supervisor_telegram
  mode: single
- id: '1713203658731'
  alias: Office - Wall Light off if on for 3 minutes
  description: ''
  triggers:
  - entity_id:
    - light.office_wall_light
    to: 'on'
    for:
      hours: 0
      minutes: 3
      seconds: 0
    id: corridor_light_on_3mins
    trigger: state
  conditions: []
  actions:
  - metadata: {}
    data: {}
    target:
      entity_id: light.office_wall_light
    action: light.turn_off
  - data:
      message: "\U0001F916 Automation - Office Wall Light off if on for 3 minutes
        \U0001F4A1"
    action: notify.supervisor_telegram
  mode: single
- id: '1713728943578'
  alias: Kitchen - Turn Off LED at Midnight
  description: ''
  triggers:
  - at: 00:00:00
    trigger: time
  conditions:
  - condition: state
    state: 'on'
    entity_id: switch.kitchen_led_strip
  actions:
  - data:
      message: "\U0001F916 Automation -  \U0001F4A1 Turn off Kitchen LED at midnight"
    action: notify.supervisor_telegram
  - target:
      device_id:
      - 92fdadf222970875f82e2d221e4612e4
    data: {}
    action: switch.turn_off
  mode: single
- id: '1714730340666'
  alias: Wardrobe - Motion Detected Turn On Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.0xa4c1388091f09665_occupancy
    to: 'on'
    from: 'off'
    trigger: state
  conditions:
  - condition: state
    entity_id: light.wardrobe
    state: 'off'
  - condition: numeric_state
    entity_id: zone.home
    above: 0
  actions:
  - metadata: {}
    data: {}
    target:
      area_id: wardrobe
    action: light.turn_on
  - metadata: {}
    data:
      message: "\U0001F916 Automation - Wardrobe - Motion Detected Turn On Lights
        \U0001F4A1"
    action: notify.supervisor_telegram
  mode: single
- id: '1714734842819'
  alias: Shower - Door Open Notification to Telegram
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.shower_door_sensor_contact
    to: 'on'
    from: 'off'
    id: door_open
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F6AA Shower Door is open now!"
    action: notify.supervisor_telegram
  mode: single
- id: '1714734877897'
  alias: Shower - Door Closed Notification to Telegram
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.shower_door_sensor_contact
    to: 'off'
    from: 'on'
    id: door_closed
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F6AA Shower Door is closed now!"
    action: notify.supervisor_telegram
  mode: single
- id: '1714735104435'
  alias: Shower - Pause Music if door open
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.shower_door_sensor_contact
    to: 'on'
    from: 'off'
    id: door_open
    trigger: state
  conditions:
  - condition: state
    entity_id: media_player.shower_echo_dot
    state: playing
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F3B6 Shower Music paused because door
        is open now \U0001F6C1"
    action: notify.supervisor_telegram
  - metadata: {}
    data: {}
    target:
      entity_id: media_player.shower_echo_dot
    action: media_player.media_pause
  mode: single
- id: '1714760904783'
  alias: Wardrobe  - No Motion Turn Off Lights
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.0xa4c1388091f09665_occupancy
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 15
      seconds: 0
    id: no_motion
    trigger: state
  conditions:
  - condition: state
    state: 'on'
    entity_id: light.wardrobe
  actions:
  - target:
      area_id: wardrobe
    data: {}
    action: light.turn_off
  - data:
      message: "\U0001F916 Automation - \U0001F3BD No Presence at Wardrobe - Light
        off \U0001F4A1"
    action: notify.supervisor_telegram
  mode: single
- id: '1714937055645'
  alias: Office - Corner LED Light On Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.office_lux_illuminance
    for:
      hours: 0
      minutes: 0
      seconds: 15
    above: 30
    id: led_is_on
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.office_corner_led_light_status
    state: 'off'
  actions:
  - data:
      option: 'on'
    target:
      entity_id:
      - input_select.office_corner_led_light_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - \U0001F4A1\U0001F308 Corner LED Light is on
        in Office \U0001F4DD"
    action: notify.supervisor_telegram
  mode: single
- id: '1714937125114'
  alias: Office - Corner LED Light Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.office_lux_illuminance
    for:
      hours: 0
      minutes: 0
      seconds: 15
    id: led_is_off
    below: 22
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.office_corner_led_light_status
    state: 'on'
  actions:
  - data:
      option: 'off'
    target:
      entity_id:
      - input_select.office_corner_led_light_status
    action: input_select.select_option
  - data:
      message: "\U0001F916 Automation - \U0001F4A1\U0001F308 Corner LED Light is off
        in Office \U0001F4DD"
    action: notify.supervisor_telegram
  mode: single
- id: '1715373879371'
  alias: Dining Table - Sticker Button
  description: 'Hold - MUTE TV

    Single Press - Toggle light'
  triggers:
  - entity_id:
    - sensor.dining_table_sticker_switch_button_2nd_action
    - sensor.dining_table_sticker_switch_button_action
    to: single
    id: stickerbutton_single
    trigger: state
  - entity_id:
    - sensor.dining_table_sticker_switch_button_2nd_action
    - sensor.dining_table_sticker_switch_button_action
    to: hold
    id: stickerbutton_hold
    trigger: state
  conditions: []
  actions:
  - alias: Single Press
    if:
    - condition: trigger
      id:
      - stickerbutton_single
      enabled: true
    then:
    - target:
        entity_id: light.living_room_l2
      data: {}
      action: light.toggle
    enabled: true
  - alias: Hold
    if:
    - condition: trigger
      id:
      - stickerbutton_hold
      enabled: true
    then:
    - metadata: {}
      data:
        entity_id: media_player.living_room_lg_webos_smart_tv
        button: MUTE
      action: webostv.button
    enabled: true
  mode: single
- id: '1716359887340'
  alias: Turn Bedroom AC Off if Wardrobe AC is On
  description: ''
  triggers:
  - entity_id:
    - input_select.wardrobe_ac_status
    to: 'On'
    trigger: state
  conditions:
  - condition: state
    entity_id: input_select.bedroom_ac_status
    state: 'On'
  actions:
  - metadata: {}
    data: {}
    target:
      device_id: 4018257e961bc48fa5b1c539c9efc5ee
    action: climate.turn_off
  - data:
      message: "\U0001F916 Automation - ❄️ Turn Bedroom AC Off if Wardrobe AC is On!"
    action: notify.supervisor_telegram
  mode: single
- id: '1716395060591'
  alias: Main Door Lock State Notifications
  description: ''
  triggers:
  - entity_id:
    - lock.front_door
    to: locked
    id: locked
    trigger: state
  - entity_id:
    - lock.front_door
    to: jammed
    id: jammed
    trigger: state
  - entity_id:
    - lock.front_door
    to: unlocked
    id: unlocked
    trigger: state
  - entity_id:
    - lock.front_door
    to: unlocking
    id: unlocked
    trigger: state
  conditions: []
  actions:
  - if:
    - condition: trigger
      id:
      - locked
    then:
    - data:
        message: "\U0001F916 Automation - \U0001F6AA Main Door is LOCKED now! \U0001F510"
      action: notify.supervisor_telegram
    alias: if locked
  - alias: if unlocked
    if:
    - condition: trigger
      id:
      - unlocked
    then:
    - data:
        message: "\U0001F916 Automation - \U0001F6AA Main Door is UNLOCKED now! \U0001F513"
      action: notify.supervisor_telegram
  - alias: if jammed
    if:
    - condition: trigger
      id:
      - jammed
    then:
    - data:
        message: "\U0001F916 Automation - \U0001F6AA Main Door is JAMMED now! \U0001F50F"
      action: notify.supervisor_telegram
  mode: single
- id: '1721549549091'
  alias: Robot Vacuum if Visiting Grandparents Actionable Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.ofir_honor_magic_5_pro_wifi_connection_2
    to: kerena
    trigger: state
  conditions:
  - condition: numeric_state
    entity_id: zone.home
    below: 1
  - condition: template
    value_template: '{{ (states(''sensor.s8_pro_ultra_last_clean_start'') | as_datetime(as_datetime(0))
      | as_local).date() != now().date() }}'
  actions:
  - alias: Set up variables for the actions
    variables:
      action_keep: '{{ ''OPEN_'' ~ context.id }}'
      action_stop: '{{ ''CLOSE_'' ~ context.id }}'
      action_cab: '{{ ''CLEAN_AND_BOILER'' ~ context.id }}'
  - alias: Ask to clean or not the House via Roborock S8 Vacuum
    data:
      message: Do you want to clean the house now?
      data:
        actions:
        - action: '{{ action_keep }}'
          title: Clean House
        - action: '{{ action_stop }}'
          title: Do not clean
        - action: '{{ action_cab }}'
          title: Clean House & Open Boiler
    action: notify.mobile_app_ofir_honor_magic_5_pro
  - alias: Wait for a response
    wait_for_trigger:
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_keep }}'
      trigger: event
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_stop }}'
      trigger: event
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_cab }}'
      trigger: event
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_stop }}'
      sequence:
      - data:
          message: You chose not to clean the house.
        action: notify.mobile_app_ofir_honor_magic_5_pro
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_keep }}'
      sequence:
      - target:
          entity_id: vacuum.s8_pro_ultra
        data: {}
        action: vacuum.start
      - data:
          message: You chose to clean the house, well done!
        action: notify.mobile_app_ofir_honor_magic_5_pro
      - metadata: {}
        data:
          message: "\U0001F916 Automation - Robot Vacuum Daily Routine \U0001F9FC"
        action: notify.supervisor_telegram
      - metadata: {}
        data:
          message: "\U0001F916 Automation - Robot Vacuum Daily Routine \U0001F9FC"
        action: notify.mobile_app_elians_iphone
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_cab }}'
      sequence:
      - target:
          entity_id: vacuum.s8_pro_ultra
        data: {}
        action: vacuum.start
      - data:
          message: You chose to clean the house & open Boiler, well done!
        action: notify.mobile_app_ofir_honor_magic_5_pro
      - metadata: {}
        data:
          message: "\U0001F916 Automation - Robot Vacuum Daily Routine \U0001F9FC"
        action: notify.supervisor_telegram
      - metadata: {}
        data:
          message: "\U0001F916 Automation - Robot Vacuum Daily Routine \U0001F9FC"
        action: notify.mobile_app_elians_iphone
      - action: script.turn_on_boiler_for_45_minutes
        metadata: {}
        data: {}
  mode: single
- id: '1722426865298'
  alias: Main Door Auto Lock after 1 minute
  description: If door unlocked for 1 minute and door is closed, lock it.
  triggers:
  - entity_id:
    - lock.front_door
    to: unlocked
    id: unlocked
    for:
      hours: 0
      minutes: 1
      seconds: 0
    trigger: state
  conditions:
  - condition: state
    entity_id: binary_sensor.main_door_combined
    state: 'off'
  - condition: not
    conditions:
    - condition: state
      entity_id: binary_sensor.main_door_combined
      state:
      - unknown
      - unavailable
      for:
        hours: 0
        minutes: 0
        seconds: 0
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F6AA LOCKED MAIN DOOR AFTER DOOR WAS
        UNLOCKED FOR 1 MINUTE!!!!"
    action: notify.supervisor_telegram
  - metadata: {}
    data: {}
    target:
      entity_id:
      - lock.front_door
    action: lock.lock
  mode: single
- id: '1723800933700'
  alias: Red Alert notifications to LG Living Room TV
  description: ''
  triggers:
  - entity_id: binary_sensor.oref_alert_all_areas
    attribute: country_active_alerts
    trigger: state
  conditions: []
  actions:
  - variables:
      current: '{{ state_attr(''binary_sensor.oref_alert_all_areas'', ''country_active_alerts'')
        | map(attribute=''data'') | list }}'
      previous: '{{ trigger.from_state.attributes.country_active_alerts | map(attribute=''data'')
        | list }}'
      alerts: '{{ current | reject(''in'', previous) | unique | sort | list }}'
  - condition: template
    value_template: '{{ alerts | length > 0 }}'
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: 'אזעקות ב: {{ alerts | join('' | '') }}'
  - action: script.send_red_alert_notification_to_bedroom_tv
    metadata: {}
    data: {}
  mode: single
- id: oref_alert_country_notifications
  alias: Oref Alert Country Notifications
  description: ''
  triggers:
  - entity_id: binary_sensor.oref_alert
    attribute: country_active_alerts
    trigger: state
  actions:
  - variables:
      current: '{{ state_attr(''binary_sensor.oref_alert'', ''country_active_alerts'')
        | map(attribute=''data'') | list }}'
      previous: '{{ trigger.from_state.attributes.country_active_alerts | map(attribute=''data'')
        | list }}'
      alerts: '{{ current | reject(''in'', previous) | unique | sort | list }}'
  - condition: '{{ alerts | length > 0 }}'
  - data:
      message: 'התרעות פיקוד העורף: {{ alerts | join('' | '') }}'
    action: notify.mobile_app_ofir_honor_magic_5_pro
  - if:
    - condition: state
      entity_id: sensor.ofir_honor_magic_5_pro_wifi_connection_2
      state: AutoKit8D
    then:
    - action: notify.whatsapp
      data:
        message: ' {{ alerts | join('' | '') }}'
  mode: queued
  max: 100
  max_exceeded: silent
- id: '1724487600916'
  alias: Shower - Button Skip Song
  description: ''
  triggers:
  - entity_id:
    - sensor.shower_ikea_button_action
    to: 'on'
    trigger: state
  conditions: []
  actions:
  - target:
      entity_id: media_player.shower_echo_dot
    data: {}
    action: media_player.media_next_track
    enabled: true
  - data:
      message: "\U0001F916 Automation - \U0001F6BF Shower Button - Skipped Song \U0001F3B5"
    action: notify.supervisor_telegram
  mode: single
- id: '1724859335246'
  alias: Bathroom - Door Open Notification to Telegram
  description: If state changed to `Open` turn on light and send notification.
  triggers:
  - entity_id:
    - binary_sensor.bathroom_door_sensor_contact
    to: 'on'
    trigger: state
  conditions:
  - condition: time
    before: '23:59:00'
  - condition: time
    after: 05:50:00
  actions:
  - metadata: {}
    data: {}
    action: light.turn_on
    target:
      entity_id: light.bathroom
  - data:
      message: "\U0001F916 Automation - \U0001F6AA Bathroom Door is open now!"
    action: notify.supervisor_telegram
  mode: single
- id: '1724913119522'
  alias: Bathroom - Door Closed Notification to Telegram
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.bathroom_door_sensor_contact
    to: 'off'
    from: 'on'
    id: door_closed
    trigger: state
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F6AA Bathroom Door is closed now!"
    action: notify.supervisor_telegram
  mode: single
- id: '1728233876960'
  alias: Shower - No Presence Turn Off Lights/Heater
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.shower_motion_sensor_occupancy
    to: 'off'
    from: 'on'
    for:
      hours: 0
      minutes: 23
      seconds: 0
    id: no_motion
    trigger: state
  conditions:
  - condition: state
    state: 'on'
    entity_id: light.shower_l1
  - condition: state
    entity_id: binary_sensor.shower_door_sensor_contact
    state: 'on'
  actions:
  - data: {}
    action: light.turn_off
    target:
      entity_id: light.shower_l1
  - if:
    - condition: state
      entity_id: input_select.shower_heater_status
      state: 'on'
    then:
    - action: switch.turn_off
      metadata: {}
      data: {}
      target:
        entity_id: switch.heater_shower
    - data:
        message: "\U0001F916 Automation - \U0001F6C1 No Presence at Shower- Heater
          OFF \U0001F975"
      action: notify.supervisor_telegram
    alias: IF heater is ON, turn off
  - data:
      message: "\U0001F916 Automation - \U0001F6C1 No Presence at Shower- Light off
        \U0001F4A1"
    action: notify.supervisor_telegram
  mode: single
- id: '1728237759143'
  alias: Shower Motion Light
  description: ''
  triggers:
  - entity_id:
    - binary_sensor.shower_motion_sensor_occupancy
    to: 'on'
    id: Motion Detected on Dining Table by Person
    enabled: true
    trigger: state
  conditions:
  - condition: state
    entity_id: light.shower_l1
    state: 'off'
  actions:
  - action: light.turn_on
    metadata: {}
    data: {}
    target:
      entity_id: light.shower_l1
  - data:
      message: "\U0001F916 Automation - Shower Motion Light"
    action: notify.supervisor_telegram
  mode: single
- id: '1728310194263'
  alias: Office - Ofir Desk LED Light On Notification
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - light.ofir_desk_led
    to: 'on'
    for:
      hours: 0
      minutes: 0
      seconds: 9
    from: 'off'
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1Ofir Desk LED Light is on in Office
        \U0001F4DD"
    action: notify.supervisor_telegram
  mode: single
- id: '1728310216261'
  alias: Office - Ofir Desk LED Light Off Notification
  description: ''
  triggers:
  - trigger: state
    entity_id:
    - light.ofir_desk_led
    to: 'off'
    for:
      hours: 0
      minutes: 0
      seconds: 9
    from: 'on'
  conditions: []
  actions:
  - data:
      message: "\U0001F916 Automation - \U0001F4A1Ofir Desk LED Light is off in Office
        \U0001F4DD"
    action: notify.supervisor_telegram
  mode: single
- id: '17306656577567'
  alias: Oref Alert Country Notifications Details
  triggers:
  - trigger: event
    event_type: oref_alert_event
  conditions:
  - condition: template
    value_template: '{{ trigger.event.data.home_distance < 30 }}'
  actions:
  - action: notify.mobile_app_ofir_honor_magic_5_pro
    data:
      title: התרעות פיקוד העורף
      message: '{{ trigger.event.data.emoji }} {{ trigger.event.data.area }} [{{ trigger.event.data.title
        }}]'
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      data:
        message: '{{ trigger.event.data.emoji }} {{ trigger.event.data.area }} [{{
          trigger.event.data.title }}]'
  mode: queued
  max: 100
  max_exceeded: silent
- id: '1732371977872'
  alias: Notify MP3 Friday Song before Shabbat
  description: ''
  triggers:
  - trigger: time
    at:
      entity_id: sensor.jewish_calendar_upcoming_candle_lighting
      offset: -00:10:00
  conditions: []
  actions:
  - action: notify.alexa_media
    data:
      message: <audio src='https://3t6d68jf8e966qfhla8sjf21kyd3jk0d.ui.nabu.casa/local/mp3/shishi.mp3'/>
      target: media_player.kitchen_echo_pop
      data:
        type: tts
  - action: notify.mobile_app_elians_iphone
    metadata: {}
    data:
      message: "\U0001F54E שבת שלום צדיקה \U0001F54E"
  - action: notify.supervisor_telegram
    metadata: {}
    data:
      message: "\U0001F916 Automation - \U0001F54E Notify MP3 Friday Song before Shabbat"
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: "\U0001F54E Shabbat Shalom \U0001F54E"
  mode: single
- id: '1732806484351'
  alias: Living Room - Blinds Open on Sunrise
  description: ''
  triggers:
  - trigger: sun
    event: sunrise
    offset: 0
  conditions:
  - condition: state
    entity_id: input_select.blinds_status
    state: closed
    enabled: true
  actions:
  - action: script.living_room_blinds_open
    metadata: {}
    data: {}
  - data:
      message: "\U0001F916 Automation - \U0001FA9F Living Room - Blinds Open on Sunrise
        \U0001F6CB️"
    action: notify.supervisor_telegram
  mode: single
- id: '1732806588813'
  alias: Living Room - Blinds Close
  description: Will close blinds on sunset, tv state is on or it's raining outside!
  triggers:
  - trigger: sun
    event: sunset
    offset: 0
  - trigger: state
    entity_id:
    - input_select.living_room_tv_status
    to: 'On'
    from: 'Off'
  - trigger: state
    entity_id:
    - input_select.rain_status
    for:
      hours: 0
      minutes: 0
      seconds: 0
    to: 'on'
  conditions:
  - condition: state
    entity_id: input_select.blinds_status
    enabled: true
    state: open
  actions:
  - action: script.living_room_blinds_close
    metadata: {}
    data: {}
  - data:
      message: "\U0001F916 Automation - \U0001FA9F Living Room - Blinds Close \U0001F6CB️"
    action: notify.supervisor_telegram
  mode: single
- id: '1737126979138'
  alias: ' Kitchen - Dish Washer On Notification'
  description: ''
  triggers:
  - entity_id:
    - sensor.dish_washer_power
    for:
      hours: 0
      minutes: 0
      seconds: 25
    above: 8
    id: DishWasher_On_Notification
    trigger: numeric_state
  conditions:
  - condition: state
    entity_id: input_select.dish_washer_status
    state: 'off'
  actions:
  - target:
      entity_id:
      - input_select.dish_washer_status
    data:
      option: 'on'
    action: input_select.select_option
  - data:
      message: "\U0001F9FD\U0001F9FC\U0001F37D✨ Dish Washer has been turned ON!"
    action: notify.home_assistant_group
  - metadata: {}
    data:
      message: "\U0001F9FD\U0001F9FC\U0001F37D✨ Dish Washer has been turned ON!"
    action: notify.mobile_app_elians_iphone
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: "\U0001F9FD\U0001F9FC\U0001F37D✨ Dish Washer has been turned ON!
          \U0001F9FD\U0001F9FC\U0001F37D✨"
  mode: single
- id: '1737127072684'
  alias: Kitchen - Dish Washer Off Notification
  description: ''
  triggers:
  - entity_id:
    - sensor.dish_washer_power
    for:
      hours: 0
      minutes: 13
      seconds: 5
    id: DishWasher_Off_Notification
    trigger: numeric_state
    below: 5
  conditions:
  - condition: state
    entity_id: input_select.dish_washer_status
    state: 'on'
  actions:
  - target:
      entity_id:
      - input_select.dish_washer_status
    data:
      option: 'off'
    action: input_select.select_option
  - data:
      message: "\U0001F9FD\U0001F9FC\U0001F37D✨ Dish Washer has been turned OFF!"
    action: notify.home_assistant_group
  - metadata: {}
    data:
      message: "\U0001F9FD\U0001F9FC\U0001F37D✨ Dish Washer has finished!"
    action: notify.mobile_app_elians_iphone
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: "\U0001F9FD\U0001F9FC\U0001F37D✨ Dish Washer has been turned OFF!
          \U0001F9FD\U0001F9FC\U0001F37D✨"
  - if:
    - condition: state
      entity_id: input_select.bedroom_tv_status
      state: 'On'
    then:
    - action: notify.bedroom_tv
      data:
        data:
          duration: 10
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 10
          color: cyan
          interrupt: 0
        message: "\U0001F9FD\U0001F9FC\U0001F37D✨ Dish Washer has been turned OFF!
          \U0001F9FD\U0001F9FC\U0001F37D✨"
  mode: single
- id: '1739275973535'
  alias: Office - Rain Sensor On Notification
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.solar_rain_sensor_rain_intensity
    for:
      hours: 0
      minutes: 2
      seconds: 30
    above: 550
  conditions:
  - condition: state
    entity_id: input_select.rain_status
    state: 'off'
  actions:
  - target:
      entity_id:
      - input_select.rain_status
    data:
      option: 'on'
    action: input_select.select_option
  - action: notify.supervisor_telegram
    metadata: {}
    data:
      message: "\U0001F916 Automation - Rain Sensor On Notification \U0001F327️ "
  - action: notify.mobile_app_elians_iphone
    metadata: {}
    data:
      message: "\U0001F916 Automation - \U0001F327️ It's raining now! ☔"
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: "\U0001F327️ It's raining now! ☔"
  - if:
    - condition: state
      entity_id: input_select.bedroom_tv_status
      state: 'On'
    then:
    - action: notify.bedroom_tv
      data:
        data:
          duration: 10
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 10
          color: cyan
          interrupt: 0
        message: "\U0001F327️ It's raining now! ☔"
  mode: single
- id: '1739276206916'
  alias: Office - Rain Sensor Off Notification
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - sensor.solar_rain_sensor_rain_intensity
    for:
      hours: 0
      minutes: 7
      seconds: 0
    below: 100
  conditions:
  - condition: state
    entity_id: input_select.rain_status
    state: 'on'
  actions:
  - target:
      entity_id:
      - input_select.rain_status
    data:
      option: 'off'
    action: input_select.select_option
  - action: notify.supervisor_telegram
    metadata: {}
    data:
      message: "\U0001F916 Automation - Rain Sensor Off Notification \U0001F327️ "
  - if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      metadata: {}
      data:
        message: "\U0001F916 Automation - Rain Sensor Off Notification \U0001F327️ "
  - if:
    - condition: state
      entity_id: input_select.bedroom_tv_status
      state: 'On'
    then:
    - action: notify.bedroom_tv
      data:
        data:
          duration: 10
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 10
          color: cyan
          interrupt: 0
        message: "\U0001F916 Automation - Rain Sensor Off Notification \U0001F327️ "
  mode: single
- id: '1739521766846'
  alias: Living Room - Blinds Closed Notification
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - cover.living_room_blinds
    attribute: current_position
    above: 95
  conditions:
  - condition: state
    entity_id: input_select.blinds_status
    state: open
  actions:
  - action: input_select.select_option
    metadata: {}
    data:
      option: closed
    target:
      entity_id: input_select.blinds_status
  - data:
      message: "\U0001F916 Automation - \U0001FA9F Living Room Blinds Status changed
        to Closed \U0001F6CB️"
    action: notify.supervisor_telegram
  mode: single
- id: '1739521722206'
  alias: Living Room - Blinds Open Notification
  description: ''
  triggers:
  - trigger: numeric_state
    entity_id:
    - cover.living_room_blinds
    attribute: current_position
    below: 15
  conditions:
  - condition: state
    entity_id: input_select.blinds_status
    state: closed
  actions:
  - action: input_select.select_option
    metadata: {}
    data:
      option: open
    target:
      entity_id: input_select.blinds_status
  - data:
      message: "\U0001F916 Automation - \U0001FA9F Living Room Blinds Status changed
        to Open \U0001F6CB️"
    action: notify.supervisor_telegram
  mode: single
- id: '1742369956450'
  alias: Notify to Lock Door if Unlocked for 90 Seconds
  description: If the door is unlocked for 90 seconds, notify to lock it
  triggers:
  - entity_id: lock.front_door
    to: unlocked
    for:
      hours: 0
      minutes: 1
      seconds: 30
    trigger: state
  conditions:
  - condition: state
    entity_id: lock.front_door
    state: unlocked
  - condition: state
    entity_id: automation.red_alert
    state: 'off'
    enabled: false
  actions:
  - alias: Ask to lock or not the main door
    data:
      message: "\U0001F6AA Door is UNLOCKED for more than 90 seconds"
      data:
        notification_id: door_unlocked_notification
        actions:
        - action: '{{ action_lock }}'
          title: Lock the Door
        - action: '{{ action_unlocked }}'
          title: Keep it Unlocked
    action: notify.mobile_app_ofir_honor_magic_5_pro
  - alias: Notify second device
    data:
      message: "\U0001F6AA Door is UNLOCKED for more than 90 seconds"
      data:
        notification_id: door_unlocked_notification
        actions:
        - action: '{{ action_lock }}'
          title: Lock the Door
        - action: '{{ action_unlocked }}'
          title: Keep it Unlocked
    action: notify.mobile_app_elians_iphone
  - alias: Wait for a response
    wait_for_trigger:
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_lock }}'
      trigger: event
    - event_type: mobile_app_notification_action
      event_data:
        action: '{{ action_unlocked }}'
      trigger: event
    timeout:
      minutes: 5
    continue_on_timeout: true
  - alias: Perform the action
    choose:
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger is none }}'
      sequence:
      - target:
          entity_id: lock.front_door
        action: lock.lock
        data: {}
      - data:
          message: No response received. Door locked automatically.
          data:
            notification_id: door_unlocked_notification
        action: notify.mobile_app_ofir_honor_magic_5_pro
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_unlocked }}'
      sequence:
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ wait.trigger.event.data.device_id == ''ofir_honor_magic_5_pro''
              }}'
          sequence:
          - data:
              message: You chose to keep the door unlocked.
              data:
                notification_id: door_unlocked_notification
            action: notify.mobile_app_ofir_honor_magic_5_pro
        - conditions:
          - condition: template
            value_template: '{{ wait.trigger.event.data.device_id == ''elians_iphone''
              }}'
          sequence:
          - data:
              message: You chose to keep the door unlocked.
              data:
                notification_id: door_unlocked_notification
            action: notify.mobile_app_elians_iphone
    - conditions:
      - condition: template
        value_template: '{{ wait.trigger.event.data.action == action_lock }}'
      sequence:
      - target:
          entity_id: lock.front_door
        action: lock.lock
        data: {}
      - choose:
        - conditions:
          - condition: template
            value_template: '{{ wait.trigger.event.data.device_id == ''ofir_honor_magic_5_pro''
              }}'
          sequence:
          - data:
              message: You chose to lock the door!
              data:
                notification_id: door_unlocked_notification
            action: notify.mobile_app_ofir_honor_magic_5_pro
        - conditions:
          - condition: template
            value_template: '{{ wait.trigger.event.data.device_id == ''elians_iphone''
              }}'
          sequence:
          - data:
              message: You chose to lock the door!
              data:
                notification_id: door_unlocked_notification
            action: notify.mobile_app_elians_iphone
  variables:
    action_lock: LOCK_DOOR
    action_unlocked: KEEP_UNLOCKED
  mode: restart
- id: '1742495241093'
  alias: Doorbell Ring Notification with Immediate Alert and Snapshot
  description: Sends an immediate notification and a follow-up with a fresh snapshot
  triggers:
  - trigger: state
    entity_id:
    - binary_sensor.doorbell_ringing
    to: 'on'
  conditions: []
  actions:
  - action: button.press
    target:
      entity_id: button.doorbell_start_p2p_stream
    data: {}
  - delay:
      hours: 0
      minutes: 0
      seconds: 1
      milliseconds: 0
  - action: camera.snapshot
    target:
      entity_id: camera.doorbell
    data:
      filename: /config/www/tmp/snapshot_doorbell.jpg
  - action: script.send_doorbell_notification_to_lg_tv
    metadata: {}
    data: {}
  - action: button.press
    target:
      entity_id: button.doorbell_stop_p2p_stream
    data: {}
  - action: notify.alexa_media
    data:
      message: <audio src='https://3t6d68jf8e966qfhla8sjf21kyd3jk0d.ui.nabu.casa/local/mp3/household_doorbell_ring.mp3'/>
      target: media_player.kitchen_echo_pop
      data:
        type: tts
    continue_on_error: true
  - action: telegram_bot.send_photo
    data:
      authentication: digest
      file: /config/www/tmp/snapshot_doorbell.jpg
      caption: "\U0001F916 Automation - \U0001F514 Doorbell Ring Detected! \U0001F4F8
        Snapshot Captured!"
  - action: notify.mobile_app_ofir_honor_magic_5_pro
    data:
      message: "\U0001F916 Automation - \U0001F4F8 Doorbell snapshot captured!"
      data:
        image: /local/tmp/snapshot_doorbell.jpg
  - action: notify.mobile_app_elians_iphone
    data:
      message: "\U0001F916 Automation - \U0001F514 Doorbell Ring Detected! \U0001F4F8
        Snapshot Captured!"
      data:
        image: /local/tmp/snapshot_doorbell.jpg
  - action: script.send_doorbell_notification_to_bedroom_tv
    metadata: {}
    data: {}
  mode: single
- id: doorbell_motion_detected_notification_with_snapshot
  alias: Doorbell Snapshot Updated Notification
  description: Sends a Telegram notification with a snapshot when the doorbell image
    updates, with a 3-minute cooldown, only if no one is at home.
  triggers:
  - trigger: state
    entity_id: image.doorbell_event_image
  conditions:
  - condition: state
    entity_id: binary_sensor.any_phone_at_home
    state: 'off'
  - condition: template
    value_template: '{{ trigger.from_state.state != trigger.to_state.state }}'
    alias: Ensure the image timestamp actually changed
  - condition: template
    value_template: '{% set last_triggered = state_attr(''automation.doorbell_motion_detected_notification_with_snapshot'',
      ''last_triggered'') %} {{ (last_triggered is not none and (now() - last_triggered).total_seconds()
      > 180) or last_triggered is none }}'
    alias: Enforce 3-minute cooldown since last trigger
  actions:
  - action: telegram_bot.send_photo
    data:
      authentication: digest
      url: http://localhost:8123{{ state_attr('image.doorbell_event_image', 'entity_picture')
        }}
      caption: "\U0001F916 Automation - \U0001F6A8 Motion Detected at Doorbell! \U0001F4F8
        Snapshot Captured!"
  mode: single
  max_exceeded: silent
- id: '1742881086168'
  alias: Reload Vacuum Integration After Internet Restore
  description: Reloads the vacuum integration with delay and notifies after internet
    is restored if the vacuum is unavailable
  triggers:
  - entity_id: binary_sensor.8_8_8_8
    from: 'off'
    to: 'on'
    trigger: state
  conditions:
  - condition: state
    entity_id: vacuum.s8_pro_ultra
    state: unavailable
  actions:
  - delay:
      seconds: 30
  - data:
      entity_id: vacuum.s8_pro_ultra
    action: homeassistant.reload_config_entry
  - data:
      message: "\U0001F916 Automation - \U0001F9F9 Vacuum integration reloaded after
        internet outage\U0001F4E1"
    action: notify.supervisor_telegram
  mode: single
- id: '1742909599888'
  alias: Home Parking Spot Surveillance
  description: ''
  triggers:
  - entity_id: device_tracker.ofir_honor_magic_5_pro
    zone: zone.parkingcheckzone
    event: enter
    trigger: zone
  conditions:
  - condition: state
    entity_id: input_select.switcher_boiler_status
    state: 'On'
  actions:
  - data:
      message: "\U0001F698"
      data:
        image: /api/image_proxy/image.parking_event_image?token={{ state_attr('image.parking_event_image',
          'access_token') }}
    action: notify.mobile_app_ofir_honor_magic_5_pro
- id: '1742921574161'
  alias: Handle Boiler Power Unavailable
  description: ''
  triggers:
  - entity_id:
    - sensor.boiler_power
    to: unavailable
    trigger: state
  conditions: []
  actions:
  - data:
      message: ⚠️ Boiler power sensor is unavailable! Checking switch state...
    action: notify.home_assistant_group
  - target:
      entity_id: input_select.switcher_boiler_status
    data:
      option: "{% if states('switch.boiler') == 'on' %}\n  On\n{% elif states('switch.boiler')
        == 'off' %}\n  Off\n{% else %}\n  {{ states('input_select.switcher_boiler_status')
        }}  # Preserve last known state\n{% endif %}"
    action: input_select.select_option
  mode: single

camera_play:
  alias: Play Video on Chromecast
  sequence:
  - service: camera.play_stream
    data_template:
      media_player: '{% if is_state("input_select.camera_display", "Bedroom display")
        %} media_player.mibox4_2 {% elif is_state("input_select.camera_display", "Living
        Room display") %} media_player.mecool_ofir {% elif is_state("input_select.camera_display",
        "Office display") %} media_player.mibox4 {% endif %}

        '
      entity_id: '{% if is_state("input_select.camera_select", "Living Room") %} camera.living_room_sub
        {% elif is_state("input_select.camera_select", "Dining Table") %} camera.dining_table_sub
        {% endif %} '
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Play Video on Chromecast script has been triggered!"
  mode: single
ir_learn_mode_on:
  alias: IR Learn Mode On
  sequence:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/Smart IR Remote Control/set
      payload: '{"learn_ir_code":"ON"}'
      qos: 0
      retain: false
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Living Room IR device is now on Learn Mode"
  mode: single
  icon: mdi:remote
ir_turn_on_off_living_room_tv:
  alias: IR Toggle Living Room TV
  sequence:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/Smart IR Remote Control/set
      payload: '{"ir_code_to_send": "BWEjoBE5AsABA8sGOQLgCwFAF0ADQAFAB+AHA+ADAUAb4AcBQBPAA0ABwAvABwn5nWEj8wg5Av//4GIHAgg5Ag=="}'
      qos: 0
      retain: false
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Living room IR has turned ON/OFF Living room TV!"
  mode: single
  icon: mdi:remote-tv
ir_learn_mode_on_bedroom:
  alias: IR Learn Mode On (Bedroom)
  sequence:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/Bedroom Smart IR Remote Control/set
      payload: '{"learn_ir_code":"ON"}'
      qos: 0
      retain: false
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Bedroom IR device is now on Learn Mode"
  mode: single
  icon: mdi:remote
ir_turn_on_off_bedroom_tv:
  alias: IR Toggle Bedroom TV
  sequence:
  - service: mqtt.publish
    data:
      topic: zigbee2mqtt/Bedroom Smart IR Remote Control/set
      payload: '{"ir_code_to_send": "BaIjxREpAkABB4QCKQK6BikCQAfgBwFAF0ADQAFAB+AHA0ABwDdAG+AHAUATwANAAcALwAcJTJ6iI9oIKQL//+BLBwCE4EZX4AdP4AcP4E/H4DdX4Gen4A9v4A8X4DffCSkC//+iI9oIKQI="}'
      qos: 0
      retain: false
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Bedroom IR to turn ON/OFF TV has been triggered!"
  mode: single
  icon: mdi:remote-tv
turn_off_on_kitchen_light:
  alias: Toggle Kitchen Light
  sequence:
  - service: light.toggle
    metadata: {}
    data: {}
    target:
      entity_id: light.kitchen_l1
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Kitchen light has been triggered!"
  mode: single
  icon: hue:ceiling-round
turn_on_switcher_for_60mins:
  alias: Turn ON Boiler for 60 minutes
  sequence:
  - service: switch.turn_on
    target:
      device_id: 928250a9ace44dda8bbe162fc9440d6d
    data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script -  Turn On Switcher for 60 minutes has been triggered! "
  - delay:
      hours: 1
      minutes: 0
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      device_id:
      - 928250a9ace44dda8bbe162fc9440d6d
    data: {}
  mode: single
  icon: mdi:water-boiler-auto
shower_music:
  alias: Shower Music
  sequence:
  - service: spotcast.start
    data:
      device_name: Shower Echo Dot
      uri: spotify:playlist:3OrzpgkRM3gHd4xAhy86Zr
      random_song: true
      shuffle: true
      force_playback: true
      start_volume: 86
  mode: single
  icon: mdi:account-music
toggle_living_room_ac:
  alias: Toggle Living Room AC
  sequence:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: climate.ofir_a_c
          state: cool
        - condition: state
          entity_id: climate.ofir_a_c
          state: heat
        - condition: state
          entity_id: climate.ofir_a_c
          state: heat_cool
      sequence:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.ofir_a_c
    - conditions:
      - condition: state
        entity_id: climate.ofir_a_c
        state: 'off'
      sequence:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.ofir_a_c
  mode: single
  icon: mdi:air-conditioner
toggle_bedroom_ac:
  alias: Toggle Bedroom AC
  sequence:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: climate.bedroom_ac
          state: cool
        - condition: state
          entity_id: climate.bedroom_ac
          state: heat
        - condition: state
          entity_id: climate.bedroom_ac
          state: heat_cool
      sequence:
      - service: climate.turn_off
        data: {}
        target:
          entity_id: climate.bedroom_ac
    - conditions:
      - condition: state
        entity_id: climate.bedroom_ac
        state: 'off'
      sequence:
      - service: climate.turn_on
        data: {}
        target:
          entity_id: climate.bedroom_ac
  mode: single
  icon: mdi:air-conditioner
home_leave:
  alias: Home Leave
  sequence:
  - data:
      message: "\U0001F916 Automation - Home Leave activated!"
    action: notify.supervisor_telegram
  - repeat:
      while:
      - condition: template
        value_template: '{{ is_state(''input_select.bedroom_tv_status'', ''On'') or
          is_state(''input_select.bedroom_ac_status'', ''On'') or is_state(''input_select.living_room_tv_status'',
          ''On'') or is_state(''input_select.office_tv_status'', ''On'') or is_state(''input_select.office_ac_status'',
          ''On'') or is_state(''input_select.wardrobe_ac_status'', ''On'') or is_state(''input_select.shower_heater_status'',
          ''On'')}}'
      sequence:
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.bedroom_tv_status
            state: 'On'
          sequence:
          - data:
              topic: zigbee2mqtt/Bedroom Smart IR Remote Control/set
              payload: '{"ir_code_to_send": "BaIjxREpAkABB4QCKQK6BikCQAfgBwFAF0ADQAFAB+AHA0ABwDdAG+AHAUATwANAAcALwAcJTJ6iI9oIKQL//+BLBwCE4EZX4AdP4AcP4E/H4DdX4Gen4A9v4A8X4DffCSkC//+iI9oIKQI="}'
              qos: 0
              retain: false
            action: mqtt.publish
        enabled: true
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.bedroom_ac_status
            state: 'On'
          sequence:
          - data: {}
            target:
              entity_id: climate.bedroom_ac
            action: climate.turn_off
      - choose:
        - conditions:
          - condition: or
            conditions:
            - condition: state
              entity_id: climate.ofir_a_c
              state: cool
            - condition: state
              entity_id: climate.ofir_a_c
              state: heat
          sequence:
          - data: {}
            target:
              entity_id: climate.ofir_a_c
            action: climate.turn_off
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.living_room_tv_status
            state: 'On'
          sequence:
          - data:
              topic: zigbee2mqtt/Smart IR Remote Control/set
              payload: '{"ir_code_to_send": "BWEjoBE5AsABA8sGOQLgCwFAF0ADQAFAB+AHA+ADAUAb4AcBQBPAA0ABwAvABwn5nWEj8wg5Av//4GIHAgg5Ag=="}'
              qos: 0
              retain: false
            enabled: false
            action: mqtt.publish
          - metadata: {}
            data: {}
            action: script.ir_turn_on_off_living_room_tv
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.office_tv_status
            state: 'On'
          sequence:
          - data: {}
            action: script.tv_power_office
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.office_ac_status
            state: 'On'
          sequence:
          - data: {}
            target:
              entity_id: climate.office
            action: climate.turn_off
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.wardrobe_ac_status
            state: 'On'
          sequence:
          - data: {}
            target:
              entity_id:
              - climate.wardrobe
            action: climate.turn_off
      - choose:
        - conditions:
          - condition: state
            entity_id: input_select.shower_heater_status
            state: 'On'
          sequence:
          - target:
              entity_id: switch.heater_shower
            data: {}
            action: switch.turn_off
      - delay:
          hours: 0
          minutes: 12
          seconds: 55
          milliseconds: 0
  - data:
      message: "\U0001F916 Automation - Home Leave electric devices are OFF!"
    action: notify.supervisor_telegram
  - continue_on_error: true
    data: {}
    target:
      area_id:
      - living_room
      - kitchen
      - wardrobe
      - shower
      entity_id:
      - light.office
      - light.office_bathroom
      - light.office_wall_light
      - light.ofir_desk_led
    action: light.turn_off
  - data: {}
    target:
      entity_id: switch.kitchen_led_strip
    action: switch.turn_off
  - data:
      message: "\U0001F916 Automation - House devices are OFF!"
    action: notify.supervisor_telegram
  mode: single
  icon: mdi:hand-wave
tv_power_office:
  alias: TV Power Office
  sequence:
  - service: remote.send_command
    metadata: {}
    data:
      device: TV
      command: Power
    target:
      device_id: 213c1e28be789af24d278bfa20f54941
  mode: single
  icon: mdi:television
turn_on_boiler_for_35_minutes:
  alias: Turn ON Boiler for 35 minutes
  sequence:
  - service: switch.turn_on
    target:
      device_id: 928250a9ace44dda8bbe162fc9440d6d
    data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script -  Turn On Switcher for 35 minutes has been triggered! "
  - delay:
      hours: 0
      minutes: 35
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      device_id:
      - 928250a9ace44dda8bbe162fc9440d6d
    data: {}
  mode: single
  icon: mdi:water-boiler-auto
turn_on_boiler_for_45_minutes:
  alias: Turn ON Boiler for 45 minutes
  sequence:
  - service: switch.turn_on
    target:
      device_id: 928250a9ace44dda8bbe162fc9440d6d
    data: {}
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script -  Turn On Switcher for 45 minutes has been triggered! "
  - delay:
      hours: 0
      minutes: 45
      seconds: 0
      milliseconds: 0
  - service: switch.turn_off
    target:
      device_id:
      - 928250a9ace44dda8bbe162fc9440d6d
    data: {}
  mode: single
  icon: mdi:water-boiler-auto
toggle_office_ac:
  alias: Toggle Office AC
  sequence:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: climate.office
          state: cool
        - condition: state
          entity_id: climate.office
          state: heat
        - condition: state
          entity_id: climate.office
          state: heat_cool
      sequence:
      - service: climate.turn_off
        data: {}
        target:
          entity_id:
          - climate.office
    - conditions:
      - condition: state
        entity_id: climate.office
        state: 'off'
      sequence:
      - service: climate.turn_on
        data: {}
        target:
          entity_id:
          - climate.office
  mode: single
  icon: mdi:air-conditioner
toggle_living_room_light:
  alias: Toggle Living Room Light
  sequence:
  - service: light.toggle
    metadata: {}
    data: {}
    target:
      entity_id:
      - light.living_room_l1
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Living Room Light has been triggered!"
  mode: single
  icon: mdi:ceiling-light
toggle_bedroom_light:
  alias: Toggle Bedroom Light
  sequence:
  - service: light.toggle
    metadata: {}
    data: {}
    target:
      entity_id: light.bedroom
  - service: notify.supervisor_telegram
    data:
      message: "\U0001F4DC Script - Bedroom Light has been triggered!"
  mode: single
  icon: mdi:ceiling-fan-light
office_corner_led_toggle:
  alias: Office Corner LED Toggle
  sequence:
  - service: remote.send_command
    metadata: {}
    data:
      num_repeats: 1
      delay_secs: 0.4
      hold_secs: 0
      device: Corner_RGB_Lamp
      command: Power
    target:
      device_id: 213c1e28be789af24d278bfa20f54941
  mode: single
  icon: mdi:led-strip
unlock_main_door:
  alias: Unlock Main Door
  sequence:
  - metadata: {}
    data: {}
    target:
      entity_id:
      - lock.front_door_2
      - lock.front_door
    action: lock.unlock
  - data:
      message: "\U0001F916 Automation - \U0001F6AA Main Door Unlocked by Script! \U0001F510"
    action: notify.supervisor_telegram
  mode: single
  icon: mdi:lock-open
boil_tami4_water:
  alias: Boil Tami4 Water
  sequence:
  - action: button.press
    metadata: {}
    data: {}
    target:
      entity_id: button.tami4_boil_water
  - data:
      message: "\U0001F4DC Script -  Boil Tami4 Water has been triggered!"
    action: notify.supervisor_telegram
  - if:
    - condition: state
      entity_id: person.elian
      state: home
    then:
    - action: notify.mobile_app_elians_iphone
      metadata: {}
      data:
        message: ♨️ Boiling Tami4 Water ♨️
    alias: If Elian Home - Notification
  - alias: If TV ON - Notification
    if:
    - condition: state
      entity_id: input_select.living_room_tv_status
      state: 'On'
    then:
    - action: notify.living_room_lg_webos_smart_tv
      data:
        message: ♨️ Boiling Tami4 Water ♨️
  description: ''
  icon: mdi:kettle-steam
living_room_blinds_open:
  alias: Living Room - Blinds Open
  sequence:
  - action: cover.close_cover
    metadata: {}
    data: {}
    target:
      entity_id: cover.living_room_blinds
  - data:
      message: "\U0001F4DC Script - \U0001FA9F Living Room - Blinds Open \U0001F6CB️"
    action: notify.supervisor_telegram
  description: ''
  icon: mdi:blinds-open
living_room_blinds_close:
  alias: Living Room - Blinds Close
  sequence:
  - action: cover.open_cover
    metadata: {}
    data: {}
    target:
      entity_id: cover.living_room_blinds
  - data:
      message: "\U0001F4DC Script - \U0001FA9F Living Room - Blinds Close \U0001F6CB️"
    action: notify.supervisor_telegram
  description: ''
  icon: mdi:blinds
turn_all_lights_off:
  alias: Turn ALL Lights OFF
  sequence:
  - action: light.turn_off
    metadata: {}
    data: {}
    target:
      area_id:
      - bedroom
      - kitchen
      - living_room
      - shower
      - wardrobe
      entity_id:
      - light.office
      - light.office_bathroom
      - light.office_wall_light
      - light.yeelink_color5_6079_light
      - light.bathroom
      - light.ofir_desk_led
  - action: switch.turn_off
    metadata: {}
    data: {}
    target:
      entity_id: switch.kitchen_led_strip
  - if:
    - condition: state
      entity_id: input_select.office_corner_led_light_status
      state: 'on'
    then:
    - action: script.office_corner_led_toggle
      metadata: {}
      data: {}
  description: ''
  icon: mdi:lamps-outline
toggle_wardrobe_ac:
  sequence:
  - choose:
    - conditions:
      - condition: or
        conditions:
        - condition: state
          entity_id: climate.wardrobe
          state: cool
        - condition: state
          entity_id: climate.wardrobe
          state: heat
        - condition: state
          entity_id: climate.wardrobe
          state: heat_cool
      sequence:
      - data: {}
        target:
          entity_id:
          - climate.wardrobe
        action: climate.turn_off
    - conditions:
      - condition: state
        entity_id: climate.wardrobe
        state: 'off'
      sequence:
      - data: {}
        target:
          entity_id:
          - climate.wardrobe
        action: climate.turn_on
  alias: Toggle Wardrobe AC
  mode: single
  icon: mdi:air-conditioner
  description: ''
send_doorbell_notification_to_lg_tv:
  alias: Send Doorbell Notification to LG TV
  description: Sends notification with doorbell snapshot to LG TV when TV is on
  sequence:
  - if:
    - condition: not
      conditions:
      - condition: state
        entity_id: input_select.living_room_tv_status
        state: 'Off'
    then:
    - action: notify.living_room_tv
      data:
        data:
          duration: 10
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 10
          color: cyan
          interrupt: 0
          image:
            path: /config/www/tmp/snapshot_doorbell.jpg
        message: "\U0001F916 Automation - \U0001F514 Doorbell Ring Detected! \U0001F4F8
          Snapshot Captured!"
        title: Doorbell Notification
send_doorbell_notification_to_bedroom_tv:
  sequence:
  - if:
    - condition: not
      conditions:
      - condition: state
        state: 'On'
        entity_id: input_select.bedroom_tv_status
    then:
    - action: notify.bedroom_tv
      data:
        data:
          duration: 10
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 10
          color: cyan
          interrupt: 0
          image:
            path: /config/www/tmp/snapshot_doorbell.jpg
        message: "\U0001F916 Automation - \U0001F514 Doorbell Ring Detected! \U0001F4F8
          Snapshot Captured!"
        title: Doorbell Notification
  alias: Send Doorbell Notification to Bedroom TV
  description: Sends notification with doorbell snapshot to Bedroom TV when TV is
    on
send_red_alert_notification_to_bedroom_tv:
  sequence:
  - if:
    - condition: state
      state: 'On'
      entity_id: input_select.bedroom_tv_status
    then:
    - action: notify.bedroom_tv
      data:
        data:
          duration: 20
          position: top-left
          fontsize: medium
          transparency: 50%
          timeout: 20
          color: cyan
          interrupt: 0
        title: "\U0001F680 Notification"
        message: 'אזעקות ב: {{ alerts | join('' | '') }}'
  alias: Send Red Alert Notification to Bedroom TV
  description: ''
fetch_calendar_events:
  alias: Fetch Calendar Events for Today
  sequence:
  - variables:
      today: '{{ now().date() }}'
      tomorrow: '{{ (now().date() + timedelta(days=1)) }}'
      calendar_entities:
      - entity: calendar.calendar_2
        label: "\U0001F469\U0001F3FD"
      - entity: calendar.ofirx3_gmail_com
        label: "\U0001F468"
      - entity: calendar.real_madrid
        label: ⚽
      - entity: calendar.hapoel_tel_aviv
        label: ⚽
      - entity: calendar.champions_league
        label: ⚽
      - entity: calendar.birthdays_2
        label: "\U0001F389"
  - action: calendar.get_events
    target:
      entity_id: '{{ calendar_entities | map(attribute=''entity'') | list }}'
    data:
      start_date_time: '{{ today | string + ''T00:00:00'' }}'
      end_date_time: '{{ tomorrow | string + ''T00:00:00'' }}'
    response_variable: calendar_events
  - stop: Done
    response_variable: calendar_events
